{"ast":null,"code":"import { REQUEST, FAILURE, SORT_DATA } from '../types';\nimport { createAction } from 'redux-api-middleware';\nexport const sortData = (text, sort, check, to, from) => dispatch => {\n  if (sort === \"Sortuj od A do Z\") {\n    sort = \"name\";\n  } else if (sort === \"Sortuj od Z do A\") {\n    sort = \"reverse\";\n  } else {\n    sort = \"price\";\n  }\n\n  dispatch(createAction({\n    endpoint: 'http://localhost:5000',\n    method: 'GET',\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    types: [REQUEST, {\n      type: SORT_DATA,\n      meta: {\n        text: text,\n        sort: sort,\n        check: check,\n        to: to,\n        from: from\n      }\n    }, FAILURE]\n  }));\n};","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/Projekt/frontend/src/Actions/sortData.js"],"names":["REQUEST","FAILURE","SORT_DATA","createAction","sortData","text","sort","check","to","from","dispatch","endpoint","method","headers","types","type","meta"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,OAAjB,EAA0BC,SAA1B,QAA0C,UAA1C;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,EAApB,EAAwBC,IAAxB,KAAiCC,QAAQ,IAAI;AAEjE,MAAGJ,IAAI,KAAK,kBAAZ,EAA+B;AAC3BA,IAAAA,IAAI,GAAG,MAAP;AACH,GAFD,MAGK,IAAIA,IAAI,KAAK,kBAAb,EAAgC;AACjCA,IAAAA,IAAI,GAAG,SAAP;AACH,GAFI,MAGD;AACAA,IAAAA,IAAI,GAAG,OAAP;AACH;;AACDI,EAAAA,QAAQ,CAACP,YAAY,CAAC;AAClBQ,IAAAA,QAAQ,EAAE,uBADQ;AAElBC,IAAAA,MAAM,EAAE,KAFU;AAGlBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAHS;AAOlBC,IAAAA,KAAK,EAAE,CAACd,OAAD,EACH;AAACe,MAAAA,IAAI,EAAEb,SAAP;AAAkBc,MAAAA,IAAI,EAClB;AACIX,QAAAA,IAAI,EAAEA,IADV;AAEIC,QAAAA,IAAI,EAAEA,IAFV;AAGIC,QAAAA,KAAK,EAAEA,KAHX;AAIIC,QAAAA,EAAE,EAAEA,EAJR;AAKIC,QAAAA,IAAI,EAAEA;AALV;AADJ,KADG,EASAR,OATA;AAPW,GAAD,CAAb,CAAR;AAoBH,CA/BM","sourcesContent":["import {REQUEST, FAILURE, SORT_DATA} from '../types'\nimport { createAction } from 'redux-api-middleware';\n\nexport const sortData = (text, sort, check, to, from) => dispatch => {\n\n    if(sort === \"Sortuj od A do Z\"){\n        sort = \"name\"\n    }\n    else if (sort === \"Sortuj od Z do A\"){\n        sort = \"reverse\"\n    }\n    else{\n        sort = \"price\"\n    }\n    dispatch(createAction({\n        endpoint: 'http://localhost:5000',\n        method: 'GET',\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },            \n        types: [REQUEST, \n            {type: SORT_DATA, meta: \n                {\n                    text: text,\n                    sort: sort,\n                    check: check,\n                    to: to,\n                    from: from,\n                }\n            }, FAILURE],\n    }))\n\n    \n}\n"]},"metadata":{},"sourceType":"module"}