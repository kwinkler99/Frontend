{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/filterData.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getData } from '../Actions/getData';\nimport './filterData.css';\nconst select = [\"Sortuj od A do Z\", \"Sortuj od Z do A\", \"Sortuj przez cenę\"];\n\nclass FilterData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      sort: \"Sortuj od A do Z\"\n    };\n    this.handleText = this.handleText.bind(this);\n    this.handleSort = this.handleSort.bind(this);\n  }\n\n  handleText(event) {\n    this.setState({ ...this.state,\n      text: event\n    });\n  }\n\n  handleSort(event) {\n    this.setState({ ...this.state,\n      sort: event\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props.data;\n    const category = [...new Set(data.map(item => item.category))].filter(i => i);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.text,\n          onChange: ev => this.handleText(ev.target.value),\n          placeholder: \"wpisz nazwe produktu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: ev => this.handleSort(ev.target.value),\n          value: this.state.sort,\n          children: select.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"checkbox\",\n          children: category.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.products\n});\n\nexport default connect(mapStateToProps, {\n  getData\n})(FilterData); // select z wyborem przez co sortowac(cena, alfabetycznie, odwrotnie do alfabetycznego)\n// wyszukiwanie po nazwie\n// checkbox z kategoriami \n// wystawic api -> przygotowac endpointy expressem node\n//psw i front \n//potem testowanie\n//co z bazami","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/filterData.js"],"names":["React","Component","connect","getData","select","FilterData","constructor","props","state","text","sort","handleText","bind","handleSort","event","setState","render","data","category","Set","map","item","filter","i","ev","target","value","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport {connect} from 'react-redux'\nimport {getData} from '../Actions/getData'\nimport './filterData.css' \n\n\nconst select = [\"Sortuj od A do Z\", \"Sortuj od Z do A\", \"Sortuj przez cenę\"]\n\nclass FilterData extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            text: \"\",\n            sort: \"Sortuj od A do Z\"\n        }\n\n        this.handleText = this.handleText.bind(this)\n        this.handleSort = this.handleSort.bind(this)\n\n    }\n\n    handleText(event){\n        this.setState({\n            ...this.state,\n            text: event\n        })\n    }\n\n    handleSort(event){\n         this.setState({\n            ...this.state,\n            sort: event\n        })\n    }\n\n    render() {\n        const {data} = this.props.data\n\n        const category = [...new Set(data.map((item) => item.category))].filter(\n            (i) => i\n        )\n\n        return(\n            <div className=\"filter\">\n                <form>\n                    <input \n                        type=\"text\" \n                        value={this.state.text} \n                        onChange={(ev) => this.handleText(ev.target.value)} \n                        placeholder=\"wpisz nazwe produktu\" /> \n                    <select \n                        onChange={(ev) => this.handleSort(ev.target.value)} \n                        value={this.state.sort}>\n                        {select.map(item => \n                            <option \n                                key={item} \n                                value={item}>\n                            {item}</option>\n                            )}\n\n                    </select><br/>\n                    <form className=\"checkbox\">\n                    {category\n                        .map(item => (\n                            <div key={item}>\n                                <label>{item}</label>\n                                <input \n                                    type = \"checkbox\" \n                                    value = {item} \n                                    />\n                            </div>)\n                        )} \n                        </form>      \n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    data: state.products,\n})\n\nexport default connect(mapStateToProps, {getData})(FilterData)\n\n\n// select z wyborem przez co sortowac(cena, alfabetycznie, odwrotnie do alfabetycznego)\n// wyszukiwanie po nazwie\n// checkbox z kategoriami \n// wystawic api -> przygotowac endpointy expressem node\n\n\n//psw i front \n//potem testowanie\n//co z bazami "]},"metadata":{},"sourceType":"module"}