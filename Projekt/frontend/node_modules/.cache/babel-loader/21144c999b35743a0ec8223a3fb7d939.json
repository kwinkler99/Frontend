{"ast":null,"code":"import { REQUEST, GET_DATA_SUCCESS, SORT_DATA, FAILURE } from '../types';\nimport { createAction } from 'redux-api-middleware';\nexport const sortData = (text, sort, check, to, from) => dispatch => {\n  if (sort === \"Sortuj od A do Z\") {\n    sort = \"name\";\n  } else if (sort === \"Sortuj od Z do A\") {\n    sort = \"reverse\";\n  } else {\n    sort = \"price\";\n  }\n\n  dispatch(createAction({\n    endpoint: 'http://localhost:5000/sort',\n    method: 'GET',\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      text: text,\n      sort: sort,\n      check: check,\n      to: to,\n      from: from\n    }),\n    types: [REQUEST, SORT_DATA, FAILURE]\n  }));\n};","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/Projekt/frontend/src/Actions/sortData.js"],"names":["REQUEST","GET_DATA_SUCCESS","SORT_DATA","FAILURE","createAction","sortData","text","sort","check","to","from","dispatch","endpoint","method","headers","body","JSON","stringify","types"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,gBAAjB,EAAmCC,SAAnC,EAA8CC,OAA9C,QAA4D,UAA5D;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,EAApB,EAAwBC,IAAxB,KAAiCC,QAAQ,IAAI;AACjE,MAAGJ,IAAI,KAAK,kBAAZ,EAA+B;AAC3BA,IAAAA,IAAI,GAAG,MAAP;AACH,GAFD,MAGK,IAAIA,IAAI,KAAK,kBAAb,EAAgC;AACjCA,IAAAA,IAAI,GAAG,SAAP;AACH,GAFI,MAGD;AACAA,IAAAA,IAAI,GAAG,OAAP;AACH;;AACDI,EAAAA,QAAQ,CAACP,YAAY,CAAC;AAClBQ,IAAAA,QAAQ,EAAE,4BADQ;AAElBC,IAAAA,MAAM,EAAE,KAFU;AAGlBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAHS;AAOlBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACF;AACIX,MAAAA,IAAI,EAAEA,IADV;AAEIC,MAAAA,IAAI,EAAEA,IAFV;AAGIC,MAAAA,KAAK,EAAEA,KAHX;AAIIC,MAAAA,EAAE,EAAEA,EAJR;AAKIC,MAAAA,IAAI,EAAEA;AALV,KADE,CAPY;AAelBQ,IAAAA,KAAK,EAAE,CAAClB,OAAD,EAAUE,SAAV,EAAqBC,OAArB;AAfW,GAAD,CAAb,CAAR;AAiBH,CA3BM","sourcesContent":["import {REQUEST, GET_DATA_SUCCESS, SORT_DATA, FAILURE} from '../types'\nimport { createAction } from 'redux-api-middleware';\n\nexport const sortData = (text, sort, check, to, from) => dispatch => {\n    if(sort === \"Sortuj od A do Z\"){\n        sort = \"name\"\n    }\n    else if (sort === \"Sortuj od Z do A\"){\n        sort = \"reverse\"\n    }\n    else{\n        sort = \"price\"\n    }\n    dispatch(createAction({\n        endpoint: 'http://localhost:5000/sort',\n        method: 'GET',\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(\n            {\n                text: text,\n                sort: sort,\n                check: check,\n                to: to,\n                from: from,\n            }),           \n        types: [REQUEST, SORT_DATA, FAILURE]\n    }))\n}\n"]},"metadata":{},"sourceType":"module"}