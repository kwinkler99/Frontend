{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/loadData.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getData } from '../Actions/getData';\nimport { editProduct } from '../Actions/editProduct';\nimport { getProduct } from '../Actions/getProduct';\nimport { editDone } from '../Actions/editDoneProduct';\nimport './loadData.css';\n\nclass LoadData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit: []\n    };\n    this.handleProduct = this.handleProduct.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleChangeEdit = this.handleChangeEdit.bind(this);\n    this.handleEditDone = this.handleEditDone.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  handleProduct(id, active) {\n    if (!active) {\n      this.props.history.push('/product');\n      this.props.getProduct(id);\n    }\n  }\n\n  handleEdit(id, item) {\n    this.setState({\n      edit: [...this.state.edit, item]\n    });\n    this.props.editProduct(id);\n  }\n\n  handleDelete() {\n    console.log(\"delete\");\n  }\n\n  handleChangeEdit(event, what, id) {\n    const editResult = this.state.edit.map(s => {\n      if (s.id === id) {\n        s[what] = event;\n      }\n\n      return s;\n    });\n    this.setState({\n      edit: editResult\n    });\n  }\n\n  handleEditDone(id) {\n    const {\n      brand,\n      name,\n      category,\n      price\n    } = this.state.edit.filter(a => a.id === id)[0];\n    this.props.editDone();\n  }\n\n  render() {\n    const {\n      data\n    } = this.props.data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => this.handleProduct(item.id, item.active),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.image,\n            alt: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), !item.active && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"brand\",\n              children: item.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"name\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"category\",\n              children: [\"Category: \", item.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"price\",\n              children: \"$\" + item.price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), item.active && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textEdit\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.edit.find(s => s.id === item.id).brand,\n              onChange: ev => this.handleChangeEdit(ev.target.value, \"brand\", item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.edit.find(s => s.id === item.id).name,\n              onChange: ev => this.handleChangeEdit(ev.target.value, \"name\", item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.edit.find(s => s.id === item.id).category,\n              onChange: ev => this.handleChangeEdit(ev.target.value, \"category\", item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: this.state.edit.find(s => s.id === item.id).price,\n              onChange: ev => this.handleChangeEdit(ev.target.value, \"price\", item.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"edit\",\n            type: \"button\",\n            value: \"Delete\",\n            onClick: () => this.handleDelete()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), item.active && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"edit\",\n            type: \"button\",\n            value: \"Done\",\n            onClick: () => this.handleEditDone(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), !item.active && /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"edit\",\n            type: \"button\",\n            value: \"Edit\",\n            onClick: () => this.handleEdit(item.id, item)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.products\n});\n\nexport default connect(mapStateToProps, {\n  getData,\n  getProduct,\n  editProduct,\n  editDone\n})(LoadData);","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/loadData.js"],"names":["React","Component","connect","getData","editProduct","getProduct","editDone","LoadData","constructor","props","state","edit","handleProduct","bind","handleEdit","handleDelete","handleChangeEdit","handleEditDone","componentDidMount","id","active","history","push","item","setState","console","log","event","what","editResult","map","s","brand","name","category","price","filter","a","render","data","image","find","ev","target","value","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport {connect} from 'react-redux'\nimport {getData} from '../Actions/getData'\nimport {editProduct} from '../Actions/editProduct'\nimport {getProduct} from '../Actions/getProduct'\nimport {editDone} from '../Actions/editDoneProduct'\nimport './loadData.css'\n\n\nclass LoadData extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            edit: []\n        }\n\n        this.handleProduct = this.handleProduct.bind(this)\n        this.handleEdit = this.handleEdit.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleChangeEdit = this.handleChangeEdit.bind(this)\n        this.handleEditDone = this.handleEditDone.bind(this)\n    }\n\n    componentDidMount(){\n        this.props.getData() \n    }\n\n    handleProduct(id, active){\n        if (!active){\n            this.props.history.push('/product')\n            this.props.getProduct(id)\n        }\n    }\n\n    handleEdit(id, item){\n        this.setState({\n            edit: [...this.state.edit, item]\n        })\n        this.props.editProduct(id)\n    }\n\n    handleDelete(){\n        console.log(\"delete\")\n    }\n\n    handleChangeEdit(event, what, id){\n        const editResult = this.state.edit.map(s => {\n            if (s.id === id){\n                s[what] = event\n            }\n            return s\n        })\n\n        this.setState({\n            edit: editResult\n        })\n    }\n\n    handleEditDone(id){\n        const {brand, name, category, price} = this.state.edit.filter(a => a.id === id)[0]\n        this.props.editDone()\n    }\n\n    render() {\n        const {data} = this.props.data\n\n        return(\n            <div className=\"view\">\n                {data.map(item => \n                    <div className=\"item\" key={item.id} >\n                        <div onClick={() => this.handleProduct(item.id, item.active)}>\n                            <img src={item.image} alt={item.name} />\n                            {!item.active && (\n                                <div className=\"text\">\n                                    <p className=\"brand\">{item.brand}</p> \n                                    <p className=\"name\">{item.name}</p>\n                                    <p className=\"category\">Category: {item.category}</p>\n                                    <p className=\"price\">{\"$\" + item.price}</p> \n                                </div>\n                            )}\n                            {item.active && (\n                                <div className=\"textEdit\">\n                                    <input \n                                        type=\"text\" \n                                        value={this.state.edit.find(s => s.id === item.id).brand} \n                                        onChange={(ev) => this.handleChangeEdit(ev.target.value, \"brand\", item.id)} />\n                                    <input \n                                        type=\"text\" \n                                        value={this.state.edit.find(s => s.id === item.id).name} \n                                        onChange={(ev) => this.handleChangeEdit(ev.target.value, \"name\", item.id)} />\n                                    <input \n                                        type=\"text\" \n                                        value={this.state.edit.find(s => s.id === item.id).category} \n                                        onChange={(ev) => this.handleChangeEdit(ev.target.value, \"category\", item.id)} />\n                                    <input \n                                        type=\"text\" \n                                        value={this.state.edit.find(s => s.id === item.id).price} \n                                        onChange={(ev) => this.handleChangeEdit(ev.target.value, \"price\", item.id)} />\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"button\">\n                            <input\n                                className=\"edit\" \n                                type=\"button\" \n                                value=\"Delete\"\n                                onClick={() => this.handleDelete()}/>\n                            {item.active && (\n                                <input \n                                    className=\"edit\" \n                                    type=\"button\"\n                                    value=\"Done\"\n                                    onClick={() => this.handleEditDone(item.id)}/>\n                            )}\n                            {!item.active && (\n                                <input \n                                    className=\"edit\" \n                                    type=\"button\"\n                                    value=\"Edit\"\n                                    onClick={() => this.handleEdit(item.id, item)}/>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    data: state.products,\n})\n\nexport default connect(mapStateToProps, {getData, getProduct, editProduct, editDone})(LoadData)\n"]},"metadata":{},"sourceType":"module"}