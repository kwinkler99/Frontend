{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/form.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getData } from '../Actions/getData';\nimport { editDone } from '../Actions/editDoneProduct';\nimport { deleteProduct } from '../Actions/deleteProduct';\nimport { newProduct } from '../Actions/newProduct';\nimport './form.css';\nconst prepare_product = {\n  id: \"new\",\n  name: \"\",\n  brand: \"\",\n  price: 0,\n  currency: \"\",\n  image_link: \"\",\n  description: \"\",\n  category: \"\",\n  product_types: \"\",\n  product_colors: [],\n  tag_list: \"\",\n  active: \"\"\n};\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: false,\n      take: \"new-product\",\n      product: prepare_product\n    };\n    this.takeProduct = this.takeProduct.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createInput = this.createInput.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDeleteAll = this.handleDeleteAll.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  takeProduct(event) {\n    const take_product = event !== \"new-product\" ? this.props.data.data.filter(item => item.id === parseInt(event))[0] : prepare_product;\n    this.setState({\n      take: event,\n      product: { ...take_product\n      }\n    });\n  }\n\n  handleChange(ev, what) {\n    this.setState({ ...this.state,\n      product: { ...this.state.product,\n        [what]: ev\n      }\n    });\n  }\n\n  createInput(word, what) {\n    if (what !== 'product_colors') {\n      return what !== 'description' && what !== 'id' && what !== 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: ev => this.handleChange(ev.target.value, what),\n          value: this.state.product[what]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 60\n        }, this)]\n      }, what, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this) || what === 'description' && what !== 'id' && what !== 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"description\",\n          onChange: ev => this.handleChange(ev.target.value, 'description'),\n          value: this.state.product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 66\n        }, this)]\n      }, what, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  handleDone(id) {\n    if (this.state.take !== 'new-product') {\n      this.props.editDone(this.state.product.id, this.state.product);\n      this.setState({\n        done: true,\n        take: \"new-product\",\n        product: prepare_product\n      });\n    } else {\n      const new_product = this.state.product;\n      new_product['id'] = id + 1;\n      this.props.newProduct(new_product);\n      this.setState({ ...this.state,\n        done: true,\n        product: prepare_product\n      });\n    }\n\n    this.props.getData();\n  }\n\n  handleDelete() {\n    if (this.state.take !== 'new-product') {\n      this.props.deleteProduct(this.state.product.id);\n      this.setState({ ...this.state,\n        product: prepare_product\n      });\n    }\n  }\n\n  handleDeleteAll() {}\n\n  validate(validateName) {\n    function init(text) {\n      alert(text);\n    }\n\n    ;\n\n    switch (validateName) {\n      case 'name':\n        if (this.state.product.name.length <= 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert\",\n            children: \"Alert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this);\n        }\n\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  handleReset() {\n    this.setState({\n      take: \"new-product\",\n      product: prepare_product\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props.data;\n    const keys = Object.keys(prepare_product);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [this.state.done && this.validate(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formEdit\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: ev => this.takeProduct(ev.target.value),\n          value: this.state.take,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"new-product\",\n            children: \"new product\"\n          }, \"new-product\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.id,\n            children: item.id\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-input\",\n          children: keys.map(item => {\n            return this.createInput(`${item}: `, item);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Colors: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"colors\",\n          children: this.state.product.product_colors.map(clr => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"color\",\n            style: {\n              backgroundColor: clr.hex_value\n            }\n          }, clr.colour_name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"allButton-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Done\",\n            onClick: () => this.handleDone(data[0].id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Delete\",\n            onClick: () => this.handleDelete()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Delete all\",\n            onClick: () => this.handleDeleteAll()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Reset\",\n            onClick: () => {\n              this.handleReset();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"img-buttton\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"formButton\",\n          type: \"button\",\n          value: \"Return to main page\",\n          onClick: () => this.props.history.push(\"/\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), this.state.product.image_link && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"imgDetails-form\",\n          src: this.state.product.image_link,\n          alt: this.state.product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.products\n});\n\nexport default connect(mapStateToProps, {\n  getData,\n  editDone,\n  deleteProduct,\n  newProduct\n})(Form);","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/form.js"],"names":["React","Component","connect","getData","editDone","deleteProduct","newProduct","prepare_product","id","name","brand","price","currency","image_link","description","category","product_types","product_colors","tag_list","active","Form","constructor","props","state","done","take","product","takeProduct","bind","handleChange","createInput","handleDone","handleDelete","handleDeleteAll","handleReset","validate","componentDidMount","event","take_product","data","filter","item","parseInt","setState","ev","what","word","target","value","new_product","validateName","init","text","alert","length","render","keys","Object","map","clr","backgroundColor","hex_value","colour_name","history","push","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport {connect} from 'react-redux'\nimport {getData} from '../Actions/getData'\nimport {editDone} from '../Actions/editDoneProduct'\nimport {deleteProduct} from '../Actions/deleteProduct'\nimport {newProduct} from '../Actions/newProduct'\nimport './form.css'\n\n\n\nconst prepare_product = {\n    id: \"new\",\n    name: \"\",\n    brand: \"\",\n    price: 0,\n    currency: \"\",\n    image_link: \"\",\n    description: \"\",\n    category: \"\",\n    product_types: \"\",\n    product_colors: [],\n    tag_list: \"\",\n    active: \"\"\n}\n\n\nclass Form extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            done: false,\n            take: \"new-product\",\n            product: prepare_product\n        }\n\n        this.takeProduct = this.takeProduct.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.createInput = this.createInput.bind(this)\n        this.handleDone = this.handleDone.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleDeleteAll = this.handleDeleteAll.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount(){\n        this.props.getData() \n    }\n\n    takeProduct(event){\n        const take_product = event !== \"new-product\" ? this.props.data.data.filter(item => item.id === parseInt(event))[0] : prepare_product\n        this.setState({\n            take: event,\n            product: {...take_product}\n        })     \n    }\n\n    handleChange(ev, what){\n        this.setState({\n            ...this.state,\n            product: {...this.state.product, [what]: ev}  \n        })   \n    }\n\n    createInput(word, what){\n        if(what !== 'product_colors' ){\n            return ((what !== 'description' && what !== 'id' && what !== 'active' &&\n                <div key={what}>\n                    <b>{word}</b><br/>\n                    <input\n                        type=\"text\" \n                        onChange={(ev) => this.handleChange(ev.target.value, what)}\n                        value={this.state.product[what]} /><br/>\n                </div>\n                ) || (what === 'description' && what !== 'id' && what !== 'active' &&\n                <div key={what}>\n                    <b>{word}</b><br/>\n                    <textarea \n                        className=\"description\"\n                        onChange={(ev) => this.handleChange(ev.target.value, 'description')} \n                        value={this.state.product.description} /><br/>\n                </div>\n            ))\n        }\n    }\n\n    handleDone(id){\n        if(this.state.take !== 'new-product'){\n            this.props.editDone(this.state.product.id, this.state.product)\n            \n            this.setState({\n                done: true,\n                take: \"new-product\",\n                product: prepare_product\n            })\n        }\n        else{\n            const new_product = this.state.product\n            new_product['id'] = id + 1\n            this.props.newProduct(new_product)\n            this.setState({\n                ...this.state, done: true, product: prepare_product\n            })\n        }\n        this.props.getData() \n        \n    }\n\n    handleDelete(){\n        if(this.state.take !== 'new-product'){\n            this.props.deleteProduct(this.state.product.id)\n            this.setState({\n                ...this.state, product: prepare_product\n            })\n        }\n    }   \n\n    handleDeleteAll(){\n\n    }\n\n    validate(validateName){\n        function init(text){\n            alert(text);\n        };\n\n        switch(validateName){\n            case 'name':\n                if(this.state.product.name.length <= 0) {\n                    return (<div className=\"alert\">Alert</div>)\n                }\n                break\n\n            \n            default:\n                return\n        }\n    }\n\n    handleReset(){\n        this.setState({\n            take: \"new-product\",\n            product: prepare_product\n        })\n    }\n\n    render(){ \n        const {data} = this.props.data\n        const keys = Object.keys(prepare_product)\n\n        return(\n            <div className=\"form\">\n                {this.state.done && (\n                    this.validate()\n                )}\n                <div className=\"formEdit\">\n                    <select\n                        onChange={(ev) => this.takeProduct(ev.target.value)}\n                        value={this.state.take}>\n                        <option \n                            key=\"new-product\"\n                            value=\"new-product\">\n                        new product\n                        </option>\n                        {data.map(item => \n                            <option \n                                key={item.id} \n                                value={item.id}>\n                            {item.id}\n                            </option>\n                        )}\n                    </select>\n                    <div className=\"form-input\">\n                        {keys.map(item => {\n                            return this.createInput(`${item}: `, item)\n                        })}\n                    </div>\n                    <b>Colors: </b>\n                    <div id=\"colors\">\n                        {this.state.product.product_colors.map(clr => \n                            <div\n                                key={clr.colour_name} \n                                className=\"color\" \n                                style={{backgroundColor:clr.hex_value}}>\n                            </div>)}\n                    </div>\n                    <div className=\"allButton-form\">\n                        <input \n                            type=\"button\"\n                            value=\"Done\"\n                            onClick={() => this.handleDone(data[0].id)}/>\n                        <input\n                            type=\"button\"\n                            value=\"Delete\"\n                            onClick={() => this.handleDelete()}/>\n                        <input\n                            type=\"button\"\n                            value=\"Delete all\"\n                            onClick={() => this.handleDeleteAll()}/>\n                        <input \n                            type=\"button\"\n                            value=\"Reset\"\n                            onClick={() => {this.handleReset()}}/>\n                    </div>\n                </div>\n                <div className=\"img-buttton\">\n                    <input \n                        className=\"formButton\"\n                        type=\"button\"\n                        value=\"Return to main page\"\n                        onClick={() => this.props.history.push(\"/\")}/>\n                    {this.state.product.image_link && (\n                    <img className=\"imgDetails-form\" src={this.state.product.image_link} alt={this.state.product.name} />)}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    data: state.products,\n})\n\nexport default connect(mapStateToProps, {getData, editDone, deleteProduct, newProduct})(Form)\n"]},"metadata":{},"sourceType":"module"}