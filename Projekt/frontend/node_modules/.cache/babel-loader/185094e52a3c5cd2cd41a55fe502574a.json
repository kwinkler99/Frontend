{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/filterData.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getData } from '../Actions/getData';\nimport './filterData.css';\nconst select = [\"Sortuj od A do Z\", \"Sortuj od Z do A\", \"Sortuj przez cenÄ™\"];\n\nclass FilterData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: \"\",\n      sort: \"Sortuj od A do Z\",\n      check: [],\n      from: 0,\n      to: 0\n    };\n    this.handleText = this.handleText.bind(this);\n    this.handleSort = this.handleSort.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleFrom = this.handleFrom.bind(this);\n    this.handleTo = this.handleTo.bind(this);\n  }\n\n  handleText(event) {\n    this.setState({ ...this.state,\n      text: event\n    });\n  }\n\n  handleSort(event) {\n    this.setState({ ...this.state,\n      sort: event\n    });\n  }\n\n  handleCheck(event) {\n    function functionCheck(value) {\n      return value !== event.value;\n    }\n\n    if (event.checked === true) {\n      this.setState({ ...this.state,\n        check: [...this.state.check, event.value]\n      });\n    } else {\n      this.setState({ ...this.state,\n        check: this.state.check.filter(functionCheck)\n      });\n    }\n  }\n\n  handleFrom(event) {\n    this.setState({ ...this.state,\n      from: event\n    });\n  }\n\n  handleTo(event) {\n    this.setState({ ...this.state,\n      to: event\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props.data;\n    const category = [...new Set(data.map(item => item.category))].filter(i => i);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.text,\n          onChange: ev => this.handleText(ev.target.value),\n          placeholder: \"wpisz nazwe produktu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: ev => this.handleSort(ev.target.value),\n          value: this.state.sort,\n          children: select.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: category.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              checked: this.state.check.includes(item),\n              type: \"checkbox\",\n              value: item,\n              onChange: ev => this.handleCheck(ev.target)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, item, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Cena od: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          style: {\n            display: \"inline\"\n          },\n          className: \"number\",\n          type: \"number\",\n          value: this.state.from,\n          onChange: ev => this.handleFrom(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            display: \"inline\"\n          },\n          children: \"Cena do: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"number\",\n          type: \"number\",\n          value: this.state.to,\n          onChange: ev => this.handleTo(ev.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 76\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"done\",\n          type: \"button\",\n          value: \"Zatwierdz\",\n          onClick: ev => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.products\n});\n\nexport default connect(mapStateToProps, {\n  getData\n})(FilterData); // select z wyborem przez co sortowac(cena, alfabetycznie, odwrotnie do alfabetycznego)\n// wyszukiwanie po nazwie\n// checkbox z kategoriami \n// wystawic api -> przygotowac endpointy expressem node\n//psw i front \n//potem testowanie\n//co z bazami","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/filterData.js"],"names":["React","Component","connect","getData","select","FilterData","constructor","props","state","text","sort","check","from","to","handleText","bind","handleSort","handleCheck","handleFrom","handleTo","event","setState","functionCheck","value","checked","filter","render","data","category","Set","map","item","i","ev","target","includes","display","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport {connect} from 'react-redux'\nimport {getData} from '../Actions/getData'\nimport './filterData.css' \n\n\nconst select = [\"Sortuj od A do Z\", \"Sortuj od Z do A\", \"Sortuj przez cenÄ™\"]\n\nclass FilterData extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            text: \"\",\n            sort: \"Sortuj od A do Z\",\n            check: [],\n            from: 0,\n            to: 0\n        }\n\n        this.handleText = this.handleText.bind(this);\n        this.handleSort = this.handleSort.bind(this);\n        this.handleCheck = this.handleCheck.bind(this);\n        this.handleFrom = this.handleFrom.bind(this);\n        this.handleTo = this.handleTo.bind(this);\n\n    }\n\n    handleText(event){\n        this.setState({\n            ...this.state,\n            text: event\n        })\n    }\n\n    handleSort(event){\n         this.setState({\n            ...this.state,\n            sort: event\n        })\n    }\n\n    handleCheck(event){\n        function functionCheck(value) {\n            return value !== event.value;\n        }\n        if(event.checked === true){\n            this.setState({\n                ...this.state,\n                check: [...this.state.check, event.value]\n            });\n        }\n        else{\n            this.setState({\n                ...this.state,\n                check: this.state.check.filter(functionCheck)\n            });\n        }\n    }\n\n    handleFrom(event){\n        this.setState({\n            ...this.state,\n            from: event\n        })\n    }\n\n    handleTo(event){\n        this.setState({\n            ...this.state,\n            to: event\n        })\n    }\n\n    render() {\n        const {data} = this.props.data\n        const category = [...new Set(data.map((item) => item.category))].filter(\n            (i) => i\n        )\n\n        return(\n            <div className=\"filter\">\n                <form>\n                    <input \n                        type=\"text\" \n                        value={this.state.text} \n                        onChange={(ev) => this.handleText(ev.target.value)} \n                        placeholder=\"wpisz nazwe produktu\" /> \n                    <select \n                        onChange={(ev) => this.handleSort(ev.target.value)} \n                        value={this.state.sort}>\n                        {select.map(item => \n                            <option \n                                key={item} \n                                value={item}>\n                            {item}</option>\n                            )}\n\n                    </select><br/>\n                    <div>\n                        {category\n                            .map(item => (\n                                <div className=\"checkbox\" key={item}>\n                                    <label>{item}</label>\n                                    <input \n                                        checked={this.state.check.includes(item)}\n                                        type = \"checkbox\" \n                                        value = {item} \n                                        onChange={(ev) => this.handleCheck(ev.target)}\n                                    />\n                                </div>\n                            )\n                        )} \n                    </div>\n                    <p>Cena od: </p>\n                    <input\n                        style={{display: \"inline\"}}\n                        className=\"number\" \n                        type=\"number\"\n                        value={this.state.from}\n                        onChange={(ev) => this.handleFrom(ev.target.value)}/>\n                    <p style={{display: \"inline\"}}>Cena do: </p>\n                    <input \n                        className=\"number\" \n                        type=\"number\"\n                        value={this.state.to}\n                        onChange={(ev) => this.handleTo(ev.target.value)}/><br/>\n                    <input\n                        className=\"done\"\n                        type=\"button\"\n                        value=\"Zatwierdz\"\n                        onClick={(ev) => {} }/>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    data: state.products,\n})\n\nexport default connect(mapStateToProps, {getData})(FilterData)\n\n\n// select z wyborem przez co sortowac(cena, alfabetycznie, odwrotnie do alfabetycznego)\n// wyszukiwanie po nazwie\n// checkbox z kategoriami \n// wystawic api -> przygotowac endpointy expressem node\n\n\n//psw i front \n//potem testowanie\n//co z bazami "]},"metadata":{},"sourceType":"module"}