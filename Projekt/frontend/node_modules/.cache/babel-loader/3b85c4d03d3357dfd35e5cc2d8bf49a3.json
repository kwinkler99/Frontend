{"ast":null,"code":"import { combineReducers } from 'redux';\nconst initialState = {\n  data: []\n};\n\nfunction arrangement(data) {\n  const response = data.map(item => {\n    const {\n      id,\n      brand,\n      name,\n      price,\n      currency,\n      image_link,\n      description,\n      category,\n      product_types,\n      product_colors,\n      tag_list\n    } = item;\n    const product = {\n      id: id,\n      brand: brand,\n      name: name,\n      price: price,\n      currency: currency,\n      image: image_link,\n      description: description,\n      category: category,\n      type: product_types,\n      colors: product_colors,\n      tag: tag_list\n    };\n    return product;\n  });\n  return response;\n}\n\nconst products = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_DATA':\n      return { ...state,\n        data: arrangement(action.payload)\n      };\n\n    case 'SORT_DATA':\n      const data = arrangement(action.payload);\n      const filterByText = data.filter(item => item.name.toLowerCase().startsWith(action.text.toLowerCase()));\n      console.log(state);\n      console.log(filterByText);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  products\n});","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Reducers/reducers.js"],"names":["combineReducers","initialState","data","arrangement","response","map","item","id","brand","name","price","currency","image_link","description","category","product_types","product_colors","tag_list","product","image","type","colors","tag","products","state","action","payload","filterByText","filter","toLowerCase","startsWith","text","console","log"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AAIA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAC;AADY,CAArB;;AAIA,SAASC,WAAT,CAAqBD,IAArB,EAA0B;AACtB,QAAME,QAAQ,GAAGF,IAAI,CAACG,GAAL,CAASC,IAAI,IAAI;AAC9B,UAAM;AAACC,MAAAA,EAAD;AAAKC,MAAAA,KAAL;AAAYC,MAAAA,IAAZ;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA,QAAzB;AAAmCC,MAAAA,UAAnC;AAA+CC,MAAAA,WAA/C;AAA4DC,MAAAA,QAA5D;AAAsEC,MAAAA,aAAtE;AAAqFC,MAAAA,cAArF;AAAqGC,MAAAA;AAArG,QAAiHX,IAAvH;AACA,UAAMY,OAAO,GAAG;AACZX,MAAAA,EAAE,EAAEA,EADQ;AAEZC,MAAAA,KAAK,EAAEA,KAFK;AAGZC,MAAAA,IAAI,EAAEA,IAHM;AAIZC,MAAAA,KAAK,EAAEA,KAJK;AAKZC,MAAAA,QAAQ,EAAEA,QALE;AAMZQ,MAAAA,KAAK,EAAEP,UANK;AAOZC,MAAAA,WAAW,EAAEA,WAPD;AAQZC,MAAAA,QAAQ,EAAEA,QARE;AASZM,MAAAA,IAAI,EAAEL,aATM;AAUZM,MAAAA,MAAM,EAAEL,cAVI;AAWZM,MAAAA,GAAG,EAAEL;AAXO,KAAhB;AAaA,WAAOC,OAAP;AACH,GAhBgB,CAAjB;AAiBA,SAAOd,QAAP;AACH;;AAGD,MAAMmB,QAAQ,GAAG,CAACC,KAAK,GAAGvB,YAAT,EAAuBwB,MAAvB,KAAkC;AAC/C,UAAQA,MAAM,CAACL,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHtB,QAAAA,IAAI,EAAEC,WAAW,CAACsB,MAAM,CAACC,OAAR;AAFd,OAAP;;AAIJ,SAAK,WAAL;AACI,YAAMxB,IAAI,GAAGC,WAAW,CAACsB,MAAM,CAACC,OAAR,CAAxB;AACA,YAAMC,YAAY,GAAGzB,IAAI,CAAC0B,MAAL,CAAYtB,IAAI,IAAIA,IAAI,CAACG,IAAL,CAAUoB,WAAV,GAAwBC,UAAxB,CAAmCL,MAAM,CAACM,IAAP,CAAYF,WAAZ,EAAnC,CAApB,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACA,aAAOH,KAAP;;AACJ;AACI,aAAOA,KAAP;AAbR;AAeH,CAhBD;;AAoBA,eAAexB,eAAe,CAAC;AAAEuB,EAAAA;AAAF,CAAD,CAA9B","sourcesContent":["import { combineReducers } from 'redux'\n\n\n\nconst initialState = {\n    data:[]\n}\n\nfunction arrangement(data){\n    const response = data.map(item => {\n        const {id, brand, name, price, currency, image_link, description, category, product_types, product_colors, tag_list} = item\n        const product = {\n            id: id,\n            brand: brand,\n            name: name,\n            price: price,\n            currency: currency,\n            image: image_link,\n            description: description,\n            category: category,\n            type: product_types,\n            colors: product_colors,\n            tag: tag_list\n        }\n        return product\n    })\n    return response\n}\n\n\nconst products = (state = initialState, action) => {\n    switch (action.type){\n        case 'GET_DATA':\n            return {\n                ...state,\n                data: arrangement(action.payload)\n            }\n        case 'SORT_DATA':\n            const data = arrangement(action.payload)\n            const filterByText = data.filter(item => item.name.toLowerCase().startsWith(action.text.toLowerCase()))\n            console.log(state)\n            console.log(filterByText)\n            return state\n        default:\n            return state;\n    }\n}\n\n\n\nexport default combineReducers({ products })"]},"metadata":{},"sourceType":"module"}