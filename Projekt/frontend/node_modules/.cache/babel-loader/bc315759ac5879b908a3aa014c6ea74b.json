{"ast":null,"code":"import { REQUEST, SORT_DATA, FAILURE } from '../types';\nimport { createAction } from 'redux-api-middleware';\nexport const sortData = (text, sort, check, to, from) => async dispatch => {\n  dispatch(createAction({\n    endpoint: 'http://localhost:5000',\n    method: 'GET',\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    types: [REQUEST, SORT_DATA, FAILURE]\n  }));\n\n  if (sort === \"Sortuj od A do Z\") {\n    sort = \"name\";\n  } else if (sort === \"Sortuj od Z do A\") {\n    sort = \"reverse\";\n  } else {\n    sort = \"price\";\n  }\n\n  dispatch({\n    type: SORT_DATA,\n    text: text,\n    sort: sort,\n    check: check,\n    to: to,\n    from: from,\n    payload: res.data\n  });\n};","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/Projekt/frontend/src/Actions/sortData.js"],"names":["REQUEST","SORT_DATA","FAILURE","createAction","sortData","text","sort","check","to","from","dispatch","endpoint","method","headers","types","type","payload","res","data"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,SAAjB,EAA4BC,OAA5B,QAA0C,UAA1C;AACA,SAASC,YAAT,QAA6B,sBAA7B;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,EAAoBC,EAApB,EAAwBC,IAAxB,KAAiC,MAAMC,QAAN,IAAkB;AACvEA,EAAAA,QAAQ,CAACP,YAAY,CAAC;AAClBQ,IAAAA,QAAQ,EAAE,uBADQ;AAElBC,IAAAA,MAAM,EAAE,KAFU;AAGlBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAHS;AAOlBC,IAAAA,KAAK,EAAE,CAACd,OAAD,EAAUC,SAAV,EAAqBC,OAArB;AAPW,GAAD,CAAb,CAAR;;AASA,MAAGI,IAAI,KAAK,kBAAZ,EAA+B;AAC3BA,IAAAA,IAAI,GAAG,MAAP;AACH,GAFD,MAGK,IAAIA,IAAI,KAAK,kBAAb,EAAgC;AACjCA,IAAAA,IAAI,GAAG,SAAP;AACH,GAFI,MAGD;AACAA,IAAAA,IAAI,GAAG,OAAP;AACH;;AACDI,EAAAA,QAAQ,CAAE;AACNK,IAAAA,IAAI,EAAEd,SADA;AAENI,IAAAA,IAAI,EAAEA,IAFA;AAGNC,IAAAA,IAAI,EAAEA,IAHA;AAINC,IAAAA,KAAK,EAAEA,KAJD;AAKNC,IAAAA,EAAE,EAAEA,EALE;AAMNC,IAAAA,IAAI,EAAEA,IANA;AAONO,IAAAA,OAAO,EAAEC,GAAG,CAACC;AAPP,GAAF,CAAR;AASH,CA5BM","sourcesContent":["import {REQUEST, SORT_DATA, FAILURE} from '../types'\nimport { createAction } from 'redux-api-middleware';\n\nexport const sortData = (text, sort, check, to, from) => async dispatch => {\n    dispatch(createAction({\n        endpoint: 'http://localhost:5000',\n        method: 'GET',\n        headers: {\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },            \n        types: [REQUEST, SORT_DATA, FAILURE]\n    }))\n    if(sort === \"Sortuj od A do Z\"){\n        sort = \"name\"\n    }\n    else if (sort === \"Sortuj od Z do A\"){\n        sort = \"reverse\"\n    }\n    else{\n        sort = \"price\"\n    }\n    dispatch( {\n        type: SORT_DATA,\n        text: text,\n        sort: sort,\n        check: check,\n        to: to,\n        from: from,\n        payload: res.data\n    })\n}\n"]},"metadata":{},"sourceType":"module"}