{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/form.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getData } from '../Actions/getData';\nimport { editDone } from '../Actions/editDoneProduct';\nimport { deleteProduct } from '../Actions/deleteProduct';\nimport { newProduct } from '../Actions/newProduct';\nconst prepare_product = {\n  id: \"new\",\n  name: \"\",\n  brand: \"\",\n  price: 0,\n  currency: \"\",\n  image_link: \"\",\n  description: \"\",\n  category: \"\",\n  product_types: \"\",\n  product_colors: [],\n  tag_list: \"\",\n  active: \"\"\n};\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      take: \"new-product\",\n      product: prepare_product\n    };\n    this.takeProduct = this.takeProduct.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createInput = this.createInput.bind(this);\n    this.handleDone = this.handleDone.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleDeleteAll = this.handleDeleteAll.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  takeProduct(event) {\n    const take_product = event !== \"new-product\" ? this.props.data.data.filter(item => item.id === parseInt(event))[0] : prepare_product;\n    this.setState({\n      take: event,\n      product: { ...take_product\n      }\n    });\n  }\n\n  handleChange(ev, what) {\n    this.setState({ ...this.state,\n      product: { ...this.state.product,\n        [what]: ev\n      }\n    });\n  }\n\n  createInput(word, what) {\n    if (what !== 'product_colors') {\n      return what !== 'description' && what !== 'id' && what !== 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: ev => this.handleChange(ev.target.value, what),\n          value: this.state.product[what]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 60\n        }, this)]\n      }, what, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this) || what === 'description' && what !== 'id' && what !== 'active' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"description\",\n          onChange: ev => this.handleChange(ev.target.value, 'description'),\n          value: this.state.product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 66\n        }, this)]\n      }, what, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  handleDone(id) {\n    if (this.state.take !== 'new-product') {\n      this.props.editDone(this.state.product.id, this.state.product);\n      this.setState({\n        take: \"new-product\",\n        product: prepare_product\n      });\n    } else {\n      const new_product = this.state.product;\n      new_product['id'] = id + 1;\n      this.props.newProduct(new_product);\n      this.setState({ ...this.state,\n        product: prepare_product\n      });\n    }\n\n    this.props.getData();\n  }\n\n  handleDelete() {\n    if (this.state.take !== 'new-product') {\n      this.props.deleteProduct(this.state.product.id);\n      this.setState({ ...this.state,\n        product: prepare_product\n      });\n    }\n  }\n\n  handleDeleteAll() {}\n\n  handleReset() {\n    this.setState({\n      take: \"new-product\",\n      product: prepare_product\n    });\n  }\n\n  render() {\n    const {\n      data\n    } = this.props.data;\n    const keys = Object.keys(prepare_product);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Return to main page\",\n        onClick: () => this.props.history.push(\"/\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: ev => this.takeProduct(ev.target.value),\n        value: this.state.take,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"new-product\",\n          children: \"new product\"\n        }, \"new-product\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.id\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), keys.map(item => {\n        return this.createInput(`${item}: `, item);\n      }), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Colors: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"colors\",\n        children: this.state.product.product_colors.map(clr => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color\",\n          style: {\n            backgroundColor: clr.hex_value\n          }\n        }, clr.colour_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Done\",\n        onClick: () => this.handleDone(data[0].id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete\",\n        onClick: () => this.handleDelete()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Delete all\",\n        onClick: () => this.handleDeleteAll()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Reset\",\n        onClick: () => {\n          this.handleReset();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.products\n});\n\nexport default connect(mapStateToProps, {\n  getData,\n  editDone,\n  deleteProduct,\n  newProduct\n})(Form);","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Component/form.js"],"names":["React","Component","connect","getData","editDone","deleteProduct","newProduct","prepare_product","id","name","brand","price","currency","image_link","description","category","product_types","product_colors","tag_list","active","Form","constructor","props","state","take","product","takeProduct","bind","handleChange","createInput","handleDone","handleDelete","handleDeleteAll","handleReset","componentDidMount","event","take_product","data","filter","item","parseInt","setState","ev","what","word","target","value","new_product","render","keys","Object","history","push","map","clr","backgroundColor","hex_value","colour_name","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport {connect} from 'react-redux'\nimport {getData} from '../Actions/getData'\nimport {editDone} from '../Actions/editDoneProduct'\nimport {deleteProduct} from '../Actions/deleteProduct'\nimport {newProduct} from '../Actions/newProduct'\n\n\n\nconst prepare_product = {\n    id: \"new\",\n    name: \"\",\n    brand: \"\",\n    price: 0,\n    currency: \"\",\n    image_link: \"\",\n    description: \"\",\n    category: \"\",\n    product_types: \"\",\n    product_colors: [],\n    tag_list: \"\",\n    active: \"\"\n}\n\n\nclass Form extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            take: \"new-product\",\n            product: prepare_product\n        }\n\n        this.takeProduct = this.takeProduct.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.createInput = this.createInput.bind(this)\n        this.handleDone = this.handleDone.bind(this)\n        this.handleDelete = this.handleDelete.bind(this)\n        this.handleDeleteAll = this.handleDeleteAll.bind(this)\n        this.handleReset = this.handleReset.bind(this)\n\n    }\n\n    componentDidMount(){\n        this.props.getData() \n    }\n\n    takeProduct(event){\n        const take_product = event !== \"new-product\" ? this.props.data.data.filter(item => item.id === parseInt(event))[0] : prepare_product\n        this.setState({\n            take: event,\n            product: {...take_product}\n        })     \n    }\n\n    handleChange(ev, what){\n        this.setState({\n            ...this.state,\n            product: {...this.state.product, [what]: ev}  \n        })   \n    }\n\n    createInput(word, what){\n        if(what !== 'product_colors' ){\n            return ((what !== 'description' && what !== 'id' && what !== 'active' &&\n                <div key={what}>\n                    <b>{word}</b><br/>\n                    <input \n                        type=\"text\" \n                        onChange={(ev) => this.handleChange(ev.target.value, what)}\n                        value={this.state.product[what]} /><br/>\n                </div>\n                ) || (what === 'description' && what !== 'id' && what !== 'active' &&\n                <div key={what}>\n                    <b>{word}</b><br/>\n                    <textarea \n                        className=\"description\"\n                        onChange={(ev) => this.handleChange(ev.target.value, 'description')} \n                        value={this.state.product.description} /><br/>\n                </div>\n            ))\n        }\n    }\n\n    handleDone(id){\n        if(this.state.take !== 'new-product'){\n            this.props.editDone(this.state.product.id, this.state.product)\n            \n            this.setState({\n                take: \"new-product\",\n                product: prepare_product\n            })\n        }\n        else{\n            const new_product = this.state.product\n            new_product['id'] = id + 1\n            this.props.newProduct(new_product)\n            this.setState({\n                ...this.state, product: prepare_product\n            })\n        }\n        this.props.getData() \n    }\n\n    handleDelete(){\n        if(this.state.take !== 'new-product'){\n            this.props.deleteProduct(this.state.product.id)\n            this.setState({\n                ...this.state, product: prepare_product\n            })\n        }\n    }   \n\n    handleDeleteAll(){\n\n    }\n\n    handleReset(){\n        this.setState({\n            take: \"new-product\",\n            product: prepare_product\n        })\n    }\n\n    render(){ \n        const {data} = this.props.data\n        const keys = Object.keys(prepare_product)\n\n        return(\n            <div>\n                <input \n                    type=\"button\"\n                    value=\"Return to main page\"\n                    onClick={() => this.props.history.push(\"/\")}/>\n                <select\n                    onChange={(ev) => this.takeProduct(ev.target.value)}\n                    value={this.state.take}>\n                    <option \n                        key=\"new-product\"\n                        value=\"new-product\">\n                    new product\n                    </option>\n                    {data.map(item => \n                        <option \n                            key={item.id} \n                            value={item.id}>\n                        {item.id}\n                        </option>\n                    )}\n                </select>\n                {keys.map(item => {\n                    return this.createInput(`${item}: `, item)\n                })}\n                <b>Colors: </b>\n                <div id=\"colors\">\n                    {this.state.product.product_colors.map(clr => \n                        <div\n                            key={clr.colour_name} \n                            className=\"color\" \n                            style={{backgroundColor:clr.hex_value}}>\n                        </div>)}\n                </div>\n                <input \n                    type=\"button\"\n                    value=\"Done\"\n                    onClick={() => this.handleDone(data[0].id)}/>\n                <input\n                    type=\"button\"\n                    value=\"Delete\"\n                    onClick={() => this.handleDelete()}/>\n                <input\n                    type=\"button\"\n                    value=\"Delete all\"\n                    onClick={() => this.handleDeleteAll()}/>\n                <input \n                    type=\"button\"\n                    value=\"Reset\"\n                    onClick={() => {this.handleReset()}}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    data: state.products,\n})\n\nexport default connect(mapStateToProps, {getData, editDone, deleteProduct, newProduct})(Form)\n"]},"metadata":{},"sourceType":"module"}