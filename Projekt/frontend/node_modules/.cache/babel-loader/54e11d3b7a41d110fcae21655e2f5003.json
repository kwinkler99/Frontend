{"ast":null,"code":"import { combineReducers } from 'redux';\nconst initialState = {\n  data: [],\n  category: []\n};\n\nfunction arrangement(data) {\n  const response = data.map(item => {\n    const {\n      id,\n      brand,\n      name,\n      price,\n      currency,\n      image_link,\n      description,\n      category,\n      product_types,\n      product_colors,\n      tag_list\n    } = item;\n    const product = {\n      id: id,\n      brand: brand,\n      name: name,\n      price: price,\n      currency: currency,\n      image: image_link,\n      description: description,\n      category: category === null ? \"\" : category,\n      type: product_types,\n      colors: product_colors,\n      tag: tag_list\n    };\n    return product;\n  });\n  return response;\n}\n\nfunction takeCategory(data) {\n  const category = [...new Set(data.map(item => item.category))].filter(i => i);\n  return category;\n}\n\nconst sortBy = key => {\n  return (a, b) => a[key] > b[key] ? 1 : b[key] > a[key] ? -1 : 0;\n};\n\nconst products = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_DATA':\n      return { ...state,\n        data: arrangement(action.payload),\n        category: takeCategory(action.payload)\n      };\n\n    case 'SORT_DATA':\n      const data = arrangement(action.payload);\n      const filterByText = data.filter(item => item.name.toLowerCase().startsWith(action.text.toLowerCase()));\n      const filterByCategory = filterByText.filter(item => item.category.startsWith(...action.check.filter(a => a === item.category)));\n      const sortData = filterByCategory.concat().sort(sortBy([action.sort]));\n      return { ...state,\n        data: filterByCategory\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  products\n});","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Reducers/reducers.js"],"names":["combineReducers","initialState","data","category","arrangement","response","map","item","id","brand","name","price","currency","image_link","description","product_types","product_colors","tag_list","product","image","type","colors","tag","takeCategory","Set","filter","i","sortBy","key","a","b","products","state","action","payload","filterByText","toLowerCase","startsWith","text","filterByCategory","check","sortData","concat","sort"],"mappings":"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","sourcesContent":["import { combineReducers } from 'redux'\n\n\n\nconst initialState = {\n    data:[],\n    category: []\n}\n\nfunction arrangement(data){\n    const response = data.map(item => {\n        const {id, brand, name, price, currency, image_link, description, category, product_types, product_colors, tag_list} = item\n        const product = {\n            id: id,\n            brand: brand,\n            name: name,\n            price: price,\n            currency: currency,\n            image: image_link,\n            description: description,\n            category: category === null ? \"\" : category,\n            type: product_types,\n            colors: product_colors,\n            tag: tag_list\n        }\n        return product\n    })\n    return response\n}\n\nfunction takeCategory(data){\n    const category = [...new Set(data.map((item) => item.category))].filter(\n        (i) => i\n    )\n\n    return category\n}\n\nconst sortBy = (key) => {\n    return (a, b) => (a[key] > b[key]) ? 1 : ((b[key] > a[key]) ? -1 : 0);\n};\n\n\n\nconst products = (state = initialState, action) => {\n    switch (action.type){\n        case 'GET_DATA':\n            return {\n                ...state,\n                data: arrangement(action.payload),\n                category: takeCategory(action.payload)\n            }\n        case 'SORT_DATA':\n            const data = arrangement(action.payload)\n            const filterByText = data.filter(item => item.name.toLowerCase().startsWith(action.text.toLowerCase()))\n            const filterByCategory = filterByText.filter(item => item.category.startsWith(...action.check.filter(a => a === item.category)))\n            const sortData = filterByCategory.concat().sort(sortBy([action.sort]))\n\n            return {\n                ...state,\n                data: filterByCategory\n            }\n        default:\n            return state;\n    }\n}\n\n\n\nexport default combineReducers({ products })"]},"metadata":{},"sourceType":"module"}