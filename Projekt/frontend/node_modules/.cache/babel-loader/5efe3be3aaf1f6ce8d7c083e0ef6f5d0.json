{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Form.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getData } from './Actions/getData';\nconst prepare_product = {\n  id: \"new\",\n  brand: \"\",\n  name: \"\",\n  price: 0,\n  currency: \"\",\n  image_link: \"\",\n  description: \"\",\n  category: \"\",\n  product_types: \"\",\n  product_colors: [],\n  tag_list: \"\",\n  active: \"\"\n};\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      take: \"new-product\",\n      product: prepare_product\n    };\n    this.takeProduct = this.takeProduct.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.createInput = this.createInput.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getData();\n  }\n\n  takeProduct(event) {\n    const take_product = event !== \"new-product\" ? this.props.data.data.filter(item => item.id === parseInt(event))[0] : prepare_product;\n    this.setState({\n      take: event,\n      product: { ...take_product\n      }\n    });\n  }\n\n  handleChange(ev, what) {\n    this.setState({ ...this.state,\n      item: { ...this.state.item,\n        [what]: ev\n      }\n    });\n  }\n\n  createInput(word, what) {\n    if (what !== 'product_colors') {\n      return what !== 'description' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: ev => this.handleChange(ev.target.value, what),\n          value: this.state.product[what]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 60\n        }, this)]\n      }, what, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this) || what === 'description' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"description\",\n          onChange: ev => this.handleChange(ev.target.value, 'description'),\n          value: this.state.product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 66\n        }, this)]\n      }, what, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      data\n    } = this.props.data;\n    const keys = Object.keys(prepare_product);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: ev => this.takeProduct(ev.target.value),\n        value: this.state.take,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"new-product\",\n          children: \"new product\"\n        }, \"new-product\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.id\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), keys.map(item => {\n        return this.createInput(`${item}: `, item);\n      }), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Colors: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"colors\",\n        children: this.state.product.product_colors.map(clr => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color\",\n          style: {\n            backgroundColor: clr.hex_value\n          }\n        }, clr.colour_name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  data: state.products\n});\n\nexport default connect(mapStateToProps, {\n  getData\n})(Form);","map":{"version":3,"sources":["/home/kasia/inf/Front2/winkler-katarzyna/projekt/src/Form.js"],"names":["React","Component","connect","getData","prepare_product","id","brand","name","price","currency","image_link","description","category","product_types","product_colors","tag_list","active","Form","constructor","props","state","take","product","takeProduct","bind","handleChange","createInput","componentDidMount","event","take_product","data","filter","item","parseInt","setState","ev","what","word","target","value","render","keys","Object","map","clr","backgroundColor","hex_value","colour_name","mapStateToProps","products"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport {connect} from 'react-redux'\nimport {getData} from './Actions/getData'\n\nconst prepare_product = {\n    id: \"new\",\n    brand: \"\",\n    name: \"\",\n    price: 0,\n    currency: \"\",\n    image_link: \"\",\n    description: \"\",\n    category: \"\",\n    product_types: \"\",\n    product_colors: [],\n    tag_list: \"\",\n    active: \"\"\n}\n\n\nclass Form extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            take: \"new-product\",\n            product: prepare_product\n        }\n\n        this.takeProduct = this.takeProduct.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.createInput = this.createInput.bind(this)\n\n    }\n\n    componentDidMount(){\n        this.props.getData() \n    }\n\n    takeProduct(event){\n        const take_product = event !== \"new-product\" ? this.props.data.data.filter(item => item.id === parseInt(event))[0] : prepare_product\n        this.setState({\n            take: event,\n            product: {...take_product}\n        })     \n    }\n\n    handleChange(ev, what){\n        this.setState({\n            ...this.state,\n            item: {...this.state.item, [what]: ev}  \n        })   \n    }\n\n    createInput(word, what){\n        if(what !== 'product_colors' ){\n            return ((what !== 'description' &&\n                <div key={what}>\n                    <b>{word}</b><br/>\n                    <input \n                        type=\"text\" \n                        onChange={(ev) => this.handleChange(ev.target.value, what)}\n                        value={this.state.product[what]} /><br/>\n                </div>\n                ) || (what === 'description' &&\n                <div key={what}>\n                    <b>{word}</b><br/>\n                    <textarea \n                        className=\"description\"\n                        onChange={(ev) => this.handleChange(ev.target.value, 'description')} \n                        value={this.state.product.description} /><br/>\n                </div>\n            ))\n        }\n    }\n\n    render(){ \n        const {data} = this.props.data\n        const keys = Object.keys(prepare_product)\n\n        return(\n            <div>\n                <select\n                    onChange={(ev) => this.takeProduct(ev.target.value)}\n                    value={this.state.take}>\n                    <option \n                        key=\"new-product\"\n                        value=\"new-product\">\n                    new product\n                    </option>\n                    {data.map(item => \n                        <option \n                            key={item.id} \n                            value={item.id}>\n                        {item.id}\n                        </option>\n                    )}\n                </select>\n                {keys.map(item => {\n                    return this.createInput(`${item}: `, item)\n                })}\n                <b>Colors: </b>\n                <div id=\"colors\">\n                    {this.state.product.product_colors.map(clr => \n                        <div \n                            key={clr.colour_name} \n                            className=\"color\" \n                            style={{backgroundColor:clr.hex_value}}>\n                        </div>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps  = (state) => ({\n    data: state.products,\n})\n\nexport default connect(mapStateToProps, {getData})(Form)\n"]},"metadata":{},"sourceType":"module"}