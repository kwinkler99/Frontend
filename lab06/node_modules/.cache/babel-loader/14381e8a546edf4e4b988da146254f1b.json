{"ast":null,"code":"var _jsxFileName = \"/home/kasia/inf/winkler-katarzyna/lab06/src/Store.js\";\nimport React, { Component } from 'react';\nimport Formularz from './Formularz.js';\nimport { createStore } from 'redux';\nimport reducer from './reducer';\n\nclass Store extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      immutableState: reduce([], {\n        type: 'START'\n      }),\n      copyState: reduce([], {\n        type: 'START'\n      })\n    };\n    this.setImmutableState = this.setImmutableState.bind(this);\n    this.filter = this.filter.bind(this);\n  }\n\n  filter(event) {\n    return this.state.copyState.filter(item => item.text.toLowerCase().startsWith(event.toLowerCase()));\n  }\n\n  setImmutableState(action) {\n    if (action.type !== 'FILTER') {\n      this.setState({\n        immutableState: reduce(this.state.copyState, action),\n        copyState: reduce(this.state.copyState, action)\n      });\n    } else if (action.type === 'FILTER') {\n      this.setState({\n        immutableState: reduce(this.filter(action.text), action)\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formularz, {\n      copyState: store.getState(),\n      immutableState: this.state.immutableState,\n      reduce: this.setImmutableState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/home/kasia/inf/winkler-katarzyna/lab06/src/Store.js"],"names":["React","Component","Formularz","createStore","reducer","Store","constructor","props","state","immutableState","reduce","type","copyState","setImmutableState","bind","filter","event","item","text","toLowerCase","startsWith","action","setState","render","store","getState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAIA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAEC,MAAM,CAAC,EAAD,EAAK;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAL,CADb;AAETC,MAAAA,SAAS,EAAEF,MAAM,CAAC,EAAD,EAAK;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAL;AAFR,KAAb;AAKA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDC,EAAAA,MAAM,CAACC,KAAD,EAAQ;AACV,WAAO,KAAKR,KAAL,CAAWI,SAAX,CAAqBG,MAArB,CAA4BE,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,UAAxB,CAAmCJ,KAAK,CAACG,WAAN,EAAnC,CAApC,CAAP;AACH;;AAEDN,EAAAA,iBAAiB,CAACQ,MAAD,EAAQ;AAErB,QAAGA,MAAM,CAACV,IAAP,KAAgB,QAAnB,EAA4B;AACxB,WAAKW,QAAL,CAAc;AACVb,QAAAA,cAAc,EAAEC,MAAM,CAAC,KAAKF,KAAL,CAAWI,SAAZ,EAAuBS,MAAvB,CADZ;AAEVT,QAAAA,SAAS,EAAEF,MAAM,CAAC,KAAKF,KAAL,CAAWI,SAAZ,EAAuBS,MAAvB;AAFP,OAAd;AAIH,KALD,MAMK,IAAGA,MAAM,CAACV,IAAP,KAAgB,QAAnB,EAA4B;AAC7B,WAAKW,QAAL,CAAc;AACVb,QAAAA,cAAc,EAAEC,MAAM,CAAC,KAAKK,MAAL,CAAYM,MAAM,CAACH,IAAnB,CAAD,EAA2BG,MAA3B;AADZ,OAAd;AAIH;AACJ;;AAGDE,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAEC,KAAK,CAACC,QAAN,EAAtB;AAAwC,MAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWC,cAAnE;AAAmF,MAAA,MAAM,EAAE,KAAKI,iBAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAxCyB;;AA6C9B,eAAeR,KAAf","sourcesContent":["import React, {Component} from 'react'\nimport Formularz from './Formularz.js'\nimport { createStore } from 'redux'\nimport reducer from './reducer'\n\n\n\nclass Store extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            immutableState: reduce([], {type: 'START'}),\n            copyState: reduce([], {type: 'START'})\n        }\n\n        this.setImmutableState = this.setImmutableState.bind(this)\n        this.filter = this.filter.bind(this)\n    }\n\n    filter(event) {\n        return this.state.copyState.filter(item => item.text.toLowerCase().startsWith(event.toLowerCase()))\n    }\n\n    setImmutableState(action){\n        \n        if(action.type !== 'FILTER'){\n            this.setState({\n                immutableState: reduce(this.state.copyState, action),\n                copyState: reduce(this.state.copyState, action)\n            })\n        }\n        else if(action.type === 'FILTER'){\n            this.setState({\n                immutableState: reduce(this.filter(action.text), action),\n            })\n            \n        }\n    }\n\n\n    render(){\n        return(\n            <div>\n                <Formularz copyState={store.getState()} immutableState={this.state.immutableState} reduce={this.setImmutableState}/>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Store"]},"metadata":{},"sourceType":"module"}