{"ast":null,"code":"var _jsxFileName = \"/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js\";\nimport React, { useState } from \"react\";\n\nconst Formularz = () => {\n  const [text, setText] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [date, setDate] = useState(Date(Date.now()));\n  const [warning, setWarning] = useState(\"\");\n\n  function addText_to_List(event) {\n    let now = Date(Date.now()).split(' ');\n    let compare = [now[2], parseInt(now[1], 10), now[0]];\n    console.log(now.getMonth);\n    console.log(Date.parse(compare));\n    console.log(Date.parse(date));\n\n    if (text !== \"\" && date !== \"\") {\n      setList([...list, {\n        text,\n        date\n      }]);\n      setDate(\"\");\n      setText(\"\");\n      setWarning(\"\");\n    } else if (Date(Date.now()) > date) {\n      setWarning(\"UWAGA! Podano zla date\");\n    } else {\n      setWarning(\"UWAGA! Nie zawarto tekstu lub daty\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, date, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Lista TO-DO:\", list.map(choose => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, choose.text, \", \", choose.date))), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: date,\n    onChange: event => {\n      setDate(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: addText_to_List,\n    value: \"Zatwierdz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, warning));\n};\n\nexport default Formularz;","map":{"version":3,"sources":["/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js"],"names":["React","useState","Formularz","text","setText","list","setList","date","setDate","Date","now","warning","setWarning","addText_to_List","event","split","compare","parseInt","console","log","getMonth","parse","map","choose","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\n\nconst Formularz = () => {\n    const [text, setText] = useState(\"\");\n    const [list, setList] = useState([]);\n    const [date, setDate] = useState(Date(Date.now()));\n    const [warning, setWarning] = useState(\"\");\n\n    \n\n\n    function addText_to_List(event) {\n        let now = Date(Date.now()).split(' ')\n        let compare = [now[2], parseInt(now[1], 10), now[0]]\n        console.log(now.getMonth)\n        console.log(Date.parse(compare))\n        console.log(Date.parse(date))\n        if(text !== \"\" && date !== \"\"){\n            setList([...list, {text, date}]);\n            setDate(\"\");\n            setText(\"\");\n            setWarning(\"\");\n        }\n        else if(Date(Date.now()) > date){\n            setWarning(\"UWAGA! Podano zla date\");\n        }\n        else{\n            setWarning(\"UWAGA! Nie zawarto tekstu lub daty\");\n        }\n    }\n\n\n\n    return(\n        <div>\n            {date}\n            <div>\n                Lista TO-DO:\n                {list\n                .map(choose => (\n                <div>{choose.text}, {choose.date}</div>\n                ))}\n            </div>\n            <form>\n                <input \n                    type = \"text\"\n                    value = {text}\n                    onChange ={(event) => {setText(event.target.value)}}/>\n                <input\n                    type =\"date\"\n                    value = {date}\n                    onChange= {(event) => {setDate(event.target.value)}}\n                />\n                <input \n                    type = \"button\" \n                    onClick = {addText_to_List}\n                    value =\"Zatwierdz\"/>\n            </form>\n            <div>{warning}</div>\n        </div>\n    )\n}\n\n\n\n\nexport default Formularz;"]},"metadata":{},"sourceType":"module"}