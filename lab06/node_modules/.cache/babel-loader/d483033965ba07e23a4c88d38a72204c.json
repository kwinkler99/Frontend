{"ast":null,"code":"var _jsxFileName = \"/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js\";\nimport React, { useState } from \"react\";\n\nconst Formularz = () => {\n  const [text, setText] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [date, setDate] = useState(Date(Date.now()));\n  const [warning_date, setWarning_Date] = useState(\"\");\n  const [warning_text, setWarning_Text] = useState(\"\");\n  const months = {\n    'Jan': '01',\n    'Feb': '02',\n    'Mar': '03',\n    'Apr': '04',\n    'May': '05',\n    'Jun': '06',\n    'Jul': '07',\n    'Aug': '08',\n    'Sep': '09',\n    'Oct': '10',\n    'Nov': '11',\n    'Dec': '12'\n  };\n\n  function addText_to_List(event) {\n    let now = Date(Date.now()).split(' ');\n    let compare = now[3] + \"-\" + months[now[1]] + \"-\" + now[2];\n\n    if (text !== \"\" && date !== \"\" && Date.parse(compare) < Date.parse(date)) {\n      setList([...list, {\n        text,\n        date\n      }]);\n      setDate(\"\");\n      setText(\"\");\n      setWarning_Date(\"\");\n      setWarning_Text(\"\");\n    } else if (Date.parse(compare) >= Date.parse(date)) {\n      setWarning_Date(\"UWAGA! Podano zla date\");\n    } else {\n      setWarning_Text(\"UWAGA! Nie zawarto tekstu lub daty\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Lista TO-DO:\", list.map(choose => /*#__PURE__*/React.createElement(\"div\", {\n    key: choose.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, choose.text, \", \", choose.date))), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, warning_text), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: date,\n    onChange: event => {\n      setDate(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, warning_date), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: addText_to_List,\n    value: \"Zatwierdz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Formularz;","map":{"version":3,"sources":["/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js"],"names":["React","useState","Formularz","text","setText","list","setList","date","setDate","Date","now","warning_date","setWarning_Date","warning_text","setWarning_Text","months","addText_to_List","event","split","compare","parse","map","choose","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACQ,IAAI,CAACA,IAAI,CAACC,GAAL,EAAD,CAAL,CAAhC;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMc,MAAM,GAAG;AACX,WAAQ,IADG;AAEX,WAAQ,IAFG;AAGX,WAAQ,IAHG;AAIX,WAAQ,IAJG;AAKX,WAAQ,IALG;AAMX,WAAQ,IANG;AAOX,WAAQ,IAPG;AAQX,WAAQ,IARG;AASX,WAAQ,IATG;AAUX,WAAQ,IAVG;AAWX,WAAQ,IAXG;AAYX,WAAQ;AAZG,GAAf;;AAkBA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAIP,GAAG,GAAGD,IAAI,CAACA,IAAI,CAACC,GAAL,EAAD,CAAJ,CAAiBQ,KAAjB,CAAuB,GAAvB,CAAV;AACA,QAAIC,OAAO,GAAGT,GAAG,CAAC,CAAD,CAAH,GAAO,GAAP,GAAWK,MAAM,CAACL,GAAG,CAAC,CAAD,CAAJ,CAAjB,GAA0B,GAA1B,GAA+BA,GAAG,CAAC,CAAD,CAAhD;;AAEA,QAAGP,IAAI,KAAK,EAAT,IAAeI,IAAI,KAAK,EAAxB,IAA8BE,IAAI,CAACW,KAAL,CAAWD,OAAX,IAAsBV,IAAI,CAACW,KAAL,CAAWb,IAAX,CAAvD,EAAwE;AACpED,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAACF,QAAAA,IAAD;AAAOI,QAAAA;AAAP,OAAV,CAAD,CAAP;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAJ,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAQ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH,KAND,MAOK,IAAGL,IAAI,CAACW,KAAL,CAAWD,OAAX,KAAuBV,IAAI,CAACW,KAAL,CAAWb,IAAX,CAA1B,EAA2C;AAC5CK,MAAAA,eAAe,CAAC,wBAAD,CAAf;AACH,KAFI,MAGD;AACAE,MAAAA,eAAe,CAAC,oCAAD,CAAf;AACH;AACJ;;AAID,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEKT,IAAI,CACJgB,GADA,CACIC,MAAM,iBACX;AAAM,IAAA,GAAG,EAAIA,MAAM,CAACnB,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BmB,MAAM,CAACnB,IAAlC,QAA0CmB,MAAM,CAACf,IAAjD,CAFC,CAFL,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAG,MADX;AAEI,IAAA,KAAK,EAAIJ,IAFb;AAGI,IAAA,QAAQ,EAAIc,KAAD,IAAW;AAACb,MAAAA,OAAO,CAACa,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAP;AAA4B,KAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,YAAN,CALJ,eAMI;AACI,IAAA,IAAI,EAAE,MADV;AAEI,IAAA,KAAK,EAAIN,IAFb;AAGI,IAAA,QAAQ,EAAIU,KAAD,IAAW;AAACT,MAAAA,OAAO,CAACS,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAP;AAA4B,KAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,YAAN,CAXJ,eAYI;AACI,IAAA,IAAI,EAAG,QADX;AAEI,IAAA,OAAO,EAAIK,eAFf;AAGI,IAAA,KAAK,EAAE,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CARJ,CADJ;AA4BH,CAzED;;AA8EA,eAAed,SAAf","sourcesContent":["import React, {useState} from \"react\";\n\n\nconst Formularz = () => {\n    const [text, setText] = useState(\"\");\n    const [list, setList] = useState([]);\n    const [date, setDate] = useState(Date(Date.now()));\n    const [warning_date, setWarning_Date] = useState(\"\");\n    const [warning_text, setWarning_Text] = useState(\"\");\n    const months = {\n        'Jan' : '01',\n        'Feb' : '02',\n        'Mar' : '03',\n        'Apr' : '04',\n        'May' : '05',\n        'Jun' : '06',\n        'Jul' : '07',\n        'Aug' : '08',\n        'Sep' : '09',\n        'Oct' : '10',\n        'Nov' : '11',\n        'Dec' : '12'\n    }\n\n    \n\n\n    function addText_to_List(event) {\n        let now = Date(Date.now()).split(' ')\n        let compare = now[3]+\"-\"+months[now[1]]+\"-\"+ now[2]\n\n        if(text !== \"\" && date !== \"\" && Date.parse(compare) < Date.parse(date)){\n            setList([...list, {text, date}]);\n            setDate(\"\");\n            setText(\"\");\n            setWarning_Date(\"\");\n            setWarning_Text(\"\");\n        }\n        else if(Date.parse(compare) >= Date.parse(date)){\n            setWarning_Date(\"UWAGA! Podano zla date\");\n        }\n        else{\n            setWarning_Text(\"UWAGA! Nie zawarto tekstu lub daty\");\n        }\n    }\n\n\n\n    return(\n        <div>\n            <div>\n                Lista TO-DO:\n                {list\n                .map(choose => (\n                <div  key = {choose.text}>{choose.text}, {choose.date}</div>\n                ))}\n            </div>\n            <form>\n                <input \n                    type = \"text\"\n                    value = {text}\n                    onChange ={(event) => {setText(event.target.value)}}/>\n                <div>{warning_text}</div>\n                <input\n                    type =\"date\"\n                    value = {date}\n                    onChange= {(event) => {setDate(event.target.value)}}\n                />\n                <div>{warning_date}</div>\n                <input \n                    type = \"button\" \n                    onClick = {addText_to_List}\n                    value =\"Zatwierdz\"/>\n            </form>\n        </div>\n    )\n}\n\n\n\n\nexport default Formularz;"]},"metadata":{},"sourceType":"module"}