{"ast":null,"code":"var _jsxFileName = \"/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js\";\nimport React, { useState } from \"react\";\nimport ToDo from './to-do.js';\n\nconst Formularz = () => {\n  const [text, setText] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [test, setTest] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [warning_date, setWarning_Date] = useState(\"\");\n  const [warning_text, setWarning_Text] = useState(\"\");\n\n  function addText_to_List(event) {\n    let now = new Date();\n    let now_temp = now.toLocaleDateString(\"en-US\").split(\"/\");\n    let now_format = now_temp[2] + \"/\" + now_temp[0] + \"/\" + now_temp[1];\n    let date_temp = date.split(\"-\");\n    let date_format = date_temp[0] + \"/\" + date_temp[1] + \"/\" + date_temp[2];\n    let date_save = date_temp[2] + \"/\" + date_temp[1] + \"/\" + date_temp[0];\n\n    if (text !== \"\" && date !== \"\" && Date.parse(now_format) < Date.parse(date_format)) {\n      setList([...list, {\n        lp: list.length !== 0 ? list[list.length - 1]['lp'] + 1 : 1,\n        text,\n        date: date_save,\n        active: \"deactivated\"\n      }]);\n      setDate(\"\");\n      setText(\"\");\n      setWarning_Date(\"\");\n      setWarning_Text(\"\");\n    } else if (Date.parse(now_format) >= Date.parse(date_format)) {\n      setWarning_Date(\"UWAGA! Podano zla date\");\n    } else if (text === \"\" && date !== \"\") {\n      setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n    } else if (date === \"\" && text !== \"\") {\n      setWarning_Date(\"UWAGA! Nie zawarto daty\");\n    } else {\n      setWarning_Date(\"UWAGA! Nie zawarto daty\");\n      setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n    }\n  }\n\n  function addDone(event) {\n    setList([...list, event]);\n  }\n\n  function addTest(lista, wybrane) {\n    lista.filter(a => a === wybrane)[0].active = \"activated\";\n    console.log(list);\n    setList(lista);\n  }\n\n  function deleteEvent(event) {\n    let update = list.filter(a => a !== event);\n    setList(update);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), warning_text, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: date,\n    onChange: event => {\n      setDate(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), warning_date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: addText_to_List,\n    value: \"Zatwierdz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })), \"Lista to-do:\", /*#__PURE__*/React.createElement(ToDo, {\n    list: list,\n    deleteEvent: deleteEvent,\n    addDone: addDone,\n    addTest: addTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Formularz;","map":{"version":3,"sources":["/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js"],"names":["React","useState","ToDo","Formularz","text","setText","list","setList","test","setTest","date","setDate","warning_date","setWarning_Date","warning_text","setWarning_Text","addText_to_List","event","now","Date","now_temp","toLocaleDateString","split","now_format","date_temp","date_format","date_save","parse","lp","length","active","addDone","addTest","lista","wybrane","filter","a","console","log","deleteEvent","update","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport ToDo from './to-do.js'\n\n\nconst Formularz = () => {\n    const [text, setText] = useState(\"\");\n    const [list, setList] = useState([]);\n    const [test, setTest] = useState([]);\n    const [date, setDate] = useState(\"\");\n    const [warning_date, setWarning_Date] = useState(\"\");\n    const [warning_text, setWarning_Text] = useState(\"\");\n\n    \n\n\n    function addText_to_List(event) {\n        let now = new Date()\n        let now_temp = now.toLocaleDateString(\"en-US\").split(\"/\")\n        let now_format = now_temp[2]+\"/\"+now_temp[0]+\"/\"+now_temp[1]\n        let date_temp = date.split(\"-\")\n        let date_format = date_temp[0]+\"/\"+date_temp[1]+\"/\"+date_temp[2]\n        let date_save = date_temp[2]+\"/\"+date_temp[1]+\"/\"+date_temp[0]\n\n\n        if(text !== \"\" && date !== \"\" && Date.parse(now_format) < Date.parse(date_format)){\n            setList([...list, {lp: list.length !== 0 ? list[list.length-1]['lp'] + 1 : 1 ,text, date: date_save, active: \"deactivated\"}]);\n            setDate(\"\");\n            setText(\"\");\n            setWarning_Date(\"\");\n            setWarning_Text(\"\");\n        }\n        else if(Date.parse(now_format) >= Date.parse(date_format)){\n            setWarning_Date(\"UWAGA! Podano zla date\");\n        }\n        else if(text === \"\" && date !== \"\"){\n            setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n        }\n        else if(date === \"\" && text !== \"\"){\n            setWarning_Date(\"UWAGA! Nie zawarto daty\");\n        }\n        else{\n            setWarning_Date(\"UWAGA! Nie zawarto daty\");\n            setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n        }\n    }\n\n    function addDone(event){\n        setList([...list, event])\n    }\n\n    function addTest(lista, wybrane){\n        lista.filter(a => a === wybrane)[0].active = \"activated\"\n        console.log(list)\n        setList(lista)\n    }\n\n    function deleteEvent(event){\n        let update = list.filter(a => a !== event)\n        setList(update)\n    }\n\n\n    return(\n        <div>\n            <form>\n                <input \n                    type = \"text\"\n                    value = {text}\n                    onChange ={(event) => {setText(event.target.value)}}\n                />{warning_text}<br/>\n                <input\n                    type =\"date\"\n                    value = {date}\n                    onChange= {(event) => {setDate(event.target.value)}}\n                />{warning_date}<br/>\n                <input \n                    type = \"button\" \n                    onClick = {addText_to_List}\n                    value =\"Zatwierdz\"/>\n            </form>\n            Lista to-do:\n            <ToDo list = {list} deleteEvent = {deleteEvent} addDone = {addDone} addTest = {addTest} />\n        </div>\n    )\n}\n\n\n\n\nexport default Formularz;"]},"metadata":{},"sourceType":"module"}