{"ast":null,"code":"var _jsxFileName = \"/home/kasia/inf/winkler-katarzyna/lab02/zad02/src/Store.js\";\nimport React, { Component } from 'react';\nimport Formularz from './Formularz.js';\n\nconst reduce = (state, action) => {\n  switch (action.type) {\n    case 'ADD':\n      console.log([...state, action.add_new]);\n      return [...state, action.add_new];\n\n    case 'DELETE':\n      return state.filter(element => element.lp !== action.lp);\n\n    case 'EXPIRED':\n      return state.map(element => {\n        if (element.lp === action.lp) {\n          return { ...element,\n            active: 'Expired'\n          };\n        }\n\n        return element;\n      });\n\n    case 'DONE':\n      console.log(state.map(element => {\n        if (element.lp === action.lp) {\n          return { ...element,\n            active: 'Done'\n          };\n        }\n\n        return element;\n      }));\n\n    case 'START':\n      return state;\n  }\n};\n\nclass Store extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      immutableState: reduce([], {\n        type: 'START'\n      })\n    };\n    this.setImmutableState = this.setImmutableState.bind(this);\n  }\n\n  setImmutableState(action) {\n    this.setState({\n      immutableState: reduce(this.state.immutableState, action)\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Formularz, {\n      immutableState: this.state.immutableState,\n      reduce: setImmutableState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Store;","map":{"version":3,"sources":["/home/kasia/inf/winkler-katarzyna/lab02/zad02/src/Store.js"],"names":["React","Component","Formularz","reduce","state","action","type","console","log","add_new","filter","element","lp","map","active","Store","constructor","props","immutableState","setImmutableState","bind","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,KAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACI,OAAlB,CAAZ;AACA,aAAO,CAAC,GAAGL,KAAJ,EAAWC,MAAM,CAACI,OAAlB,CAAP;;AACJ,SAAK,QAAL;AACI,aAAOL,KAAK,CAACM,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EAA9C,CAAP;;AACJ,SAAK,SAAL;AACI,aAAOR,KAAK,CAACS,GAAN,CAAUF,OAAO,IAAI;AACxB,YAAGA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EAAzB,EAA4B;AACxB,iBAAO,EACH,GAAGD,OADA;AAEHG,YAAAA,MAAM,EAAE;AAFL,WAAP;AAIH;;AACD,eAAOH,OAAP;AAEH,OATM,CAAP;;AAUJ,SAAK,MAAL;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACS,GAAN,CAAUF,OAAO,IAAI;AAC7B,YAAGA,OAAO,CAACC,EAAR,KAAeP,MAAM,CAACO,EAAzB,EAA4B;AACxB,iBAAO,EACH,GAAGD,OADA;AAEHG,YAAAA,MAAM,EAAE;AAFL,WAAP;AAIH;;AACD,eAAOH,OAAP;AAEH,OATW,CAAZ;;AAUJ,SAAK,OAAL;AACI,aAAOP,KAAP;AA7BR;AAgCH,CAjCD;;AAqCA,MAAMW,KAAN,SAAoBd,SAApB,CAA8B;AAC1Be,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKb,KAAL,GAAa;AACTc,MAAAA,cAAc,EAAEf,MAAM,CAAC,EAAD,EAAK;AAACG,QAAAA,IAAI,EAAE;AAAP,OAAL;AADb,KAAb;AAGA,SAAKa,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AAEH;;AAEDD,EAAAA,iBAAiB,CAACd,MAAD,EAAQ;AACrB,SAAKgB,QAAL,CAAc;AACVH,MAAAA,cAAc,EAAEf,MAAM,CAAC,KAAKC,KAAL,CAAWc,cAAZ,EAA4Bb,MAA5B;AADZ,KAAd;AAGH;;AAIDiB,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,cAAc,EAAE,KAAKlB,KAAL,CAAWc,cAAtC;AAAsD,MAAA,MAAM,EAAEC,iBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAzByB;;AA8B9B,eAAeJ,KAAf","sourcesContent":["import React, {Component} from 'react'\nimport Formularz from './Formularz.js'\n\nconst reduce = (state, action) => {\n    switch(action.type){\n        case 'ADD':\n            console.log([...state, action.add_new])\n            return [...state, action.add_new]\n        case 'DELETE':\n            return state.filter(element => element.lp !== action.lp)\n        case 'EXPIRED':\n            return state.map(element => {\n                if(element.lp === action.lp){\n                    return {\n                        ...element,\n                        active: 'Expired'\n                    }\n                }\n                return element\n                \n            })\n        case 'DONE':\n            console.log(state.map(element => {\n                if(element.lp === action.lp){\n                    return {\n                        ...element,\n                        active: 'Done'\n                    }\n                }\n                return element\n\n            }))\n        case 'START':\n            return state\n        \n    }\n}\n\n\n\nclass Store extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n            immutableState: reduce([], {type: 'START'})\n        }\n        this.setImmutableState = this.setImmutableState.bind(this)\n        \n    }\n\n    setImmutableState(action){\n        this.setState({\n            immutableState: reduce(this.state.immutableState, action)\n        })\n    }\n\n\n\n    render(){\n        return(\n            <div>\n                <Formularz immutableState={this.state.immutableState} reduce={setImmutableState}/>\n            </div>\n        )\n    }\n\n\n}\n\nexport default Store"]},"metadata":{},"sourceType":"module"}