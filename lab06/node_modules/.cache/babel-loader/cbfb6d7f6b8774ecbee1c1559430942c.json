{"ast":null,"code":"var _jsxFileName = \"/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js\";\nimport React, { useState } from \"react\";\nimport ToDo from './to-do.js';\n\nconst Formularz = () => {\n  const [text, setText] = useState(\"\");\n  const [list, setList] = useState([{\n    lp: 2,\n    text: \"cos\",\n    date: \"222222\"\n  }]);\n  const [done, setDone] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [warning_date, setWarning_Date] = useState(\"\");\n  const [warning_text, setWarning_Text] = useState(\"\");\n  const months = {\n    'Jan': '01',\n    'Feb': '02',\n    'Mar': '03',\n    'Apr': '04',\n    'May': '05',\n    'Jun': '06',\n    'Jul': '07',\n    'Aug': '08',\n    'Sep': '09',\n    'Oct': '10',\n    'Nov': '11',\n    'Dec': '12'\n  };\n\n  function addText_to_List(event) {\n    let now = Date(Date.now()).split(' ');\n    let compare = now[3] + \"-\" + months[now[1]] + \"-\" + now[2];\n    console.log(list[list.length]['lp']);\n\n    if (text !== \"\" && date !== \"\" && Date.parse(compare) < Date.parse(date)) {\n      setList([...list, {\n        lp: 1,\n        text,\n        date\n      }]);\n      setDate(\"\");\n      setText(\"\");\n      setDone([]);\n      setWarning_Date(\"\");\n      setWarning_Text(\"\");\n    } else if (Date.parse(compare) >= Date.parse(date)) {\n      setWarning_Date(\"UWAGA! Podano zla date\");\n    } else if (text === \"\" && date !== \"\") {\n      setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n    } else if (date === \"\" && text !== \"\") {\n      setWarning_Date(\"UWAGA! Nie zawarto daty\");\n    } else {\n      setWarning_Date(\"UWAGA! Nie zawarto daty\");\n      setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n    }\n  }\n\n  function addDone(event) {\n    setDone([...done, {\n      text: event.text,\n      date: event.date\n    }]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), warning_text, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: date,\n    onChange: event => {\n      setDate(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }), warning_date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: addText_to_List,\n    value: \"Zatwierdz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), \"Lista to-do:\", /*#__PURE__*/React.createElement(ToDo, {\n    list: list,\n    addDone: addDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), \"Lista ukonczonych zadan:\", /*#__PURE__*/React.createElement(ToDo, {\n    list: done,\n    addDone: addDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Formularz;","map":{"version":3,"sources":["/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js"],"names":["React","useState","ToDo","Formularz","text","setText","list","setList","lp","date","done","setDone","setDate","warning_date","setWarning_Date","warning_text","setWarning_Text","months","addText_to_List","event","now","Date","split","compare","console","log","length","parse","addDone","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAGA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,CAAC;AAACO,IAAAA,EAAE,EAAE,CAAL;AAAQJ,IAAAA,IAAI,EAAE,KAAd;AAAqBK,IAAAA,IAAI,EAAE;AAA3B,GAAD,CAAD,CAAhC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,IAAD,EAAOG,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAMgB,MAAM,GAAG;AACX,WAAQ,IADG;AAEX,WAAQ,IAFG;AAGX,WAAQ,IAHG;AAIX,WAAQ,IAJG;AAKX,WAAQ,IALG;AAMX,WAAQ,IANG;AAOX,WAAQ,IAPG;AAQX,WAAQ,IARG;AASX,WAAQ,IATG;AAUX,WAAQ,IAVG;AAWX,WAAQ,IAXG;AAYX,WAAQ;AAZG,GAAf;;AAkBA,WAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,QAAIC,GAAG,GAAGC,IAAI,CAACA,IAAI,CAACD,GAAL,EAAD,CAAJ,CAAiBE,KAAjB,CAAuB,GAAvB,CAAV;AACA,QAAIC,OAAO,GAAGH,GAAG,CAAC,CAAD,CAAH,GAAO,GAAP,GAAWH,MAAM,CAACG,GAAG,CAAC,CAAD,CAAJ,CAAjB,GAA0B,GAA1B,GAA+BA,GAAG,CAAC,CAAD,CAAhD;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYnB,IAAI,CAACA,IAAI,CAACoB,MAAN,CAAJ,CAAkB,IAAlB,CAAZ;;AACA,QAAGtB,IAAI,KAAK,EAAT,IAAeK,IAAI,KAAK,EAAxB,IAA8BY,IAAI,CAACM,KAAL,CAAWJ,OAAX,IAAsBF,IAAI,CAACM,KAAL,CAAWlB,IAAX,CAAvD,EAAwE;AACpEF,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAACE,QAAAA,EAAE,EAAE,CAAL;AAAQJ,QAAAA,IAAR;AAAcK,QAAAA;AAAd,OAAV,CAAD,CAAP;AACAG,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAP,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAM,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,MAAAA,eAAe,CAAC,EAAD,CAAf;AACH,KAPD,MAQK,IAAGK,IAAI,CAACM,KAAL,CAAWJ,OAAX,KAAuBF,IAAI,CAACM,KAAL,CAAWlB,IAAX,CAA1B,EAA2C;AAC5CK,MAAAA,eAAe,CAAC,wBAAD,CAAf;AACH,KAFI,MAGA,IAAGV,IAAI,KAAK,EAAT,IAAeK,IAAI,KAAK,EAA3B,EAA8B;AAC/BO,MAAAA,eAAe,CAAC,2BAAD,CAAf;AACH,KAFI,MAGA,IAAGP,IAAI,KAAK,EAAT,IAAeL,IAAI,KAAK,EAA3B,EAA8B;AAC/BU,MAAAA,eAAe,CAAC,yBAAD,CAAf;AACH,KAFI,MAGD;AACAA,MAAAA,eAAe,CAAC,yBAAD,CAAf;AACAE,MAAAA,eAAe,CAAC,2BAAD,CAAf;AACH;AACJ;;AAED,WAASY,OAAT,CAAiBT,KAAjB,EAAuB;AACnBR,IAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU;AAACN,MAAAA,IAAI,EAAEe,KAAK,CAACf,IAAb;AAAmBK,MAAAA,IAAI,EAAEU,KAAK,CAACV;AAA/B,KAAV,CAAD,CAAP;AACH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAG,MADX;AAEI,IAAA,KAAK,EAAIL,IAFb;AAGI,IAAA,QAAQ,EAAIe,KAAD,IAAW;AAACd,MAAAA,OAAO,CAACc,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAP;AAA4B,KAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKOf,YALP,eAKoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALpB,eAMI;AACI,IAAA,IAAI,EAAE,MADV;AAEI,IAAA,KAAK,EAAIN,IAFb;AAGI,IAAA,QAAQ,EAAIU,KAAD,IAAW;AAACP,MAAAA,OAAO,CAACO,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAP;AAA4B,KAHvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAUOjB,YAVP,eAUoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVpB,eAWI;AACI,IAAA,IAAI,EAAG,QADX;AAEI,IAAA,OAAO,EAAIK,eAFf;AAGI,IAAA,KAAK,EAAE,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CADJ,+BAkBI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAIZ,IAAd;AAAoB,IAAA,OAAO,EAAIsB,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,2CAoBI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAIlB,IAAd;AAAoB,IAAA,OAAO,EAAIkB,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADJ;AAwBH,CAjFD;;AAsFA,eAAezB,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport ToDo from './to-do.js'\n\n\nconst Formularz = () => {\n    const [text, setText] = useState(\"\");\n    const [list, setList] = useState([{lp: 2, text: \"cos\", date: \"222222\"}]);\n    const [done, setDone] = useState([]);\n    const [date, setDate] = useState(\"\");\n    const [warning_date, setWarning_Date] = useState(\"\");\n    const [warning_text, setWarning_Text] = useState(\"\");\n    const months = {\n        'Jan' : '01',\n        'Feb' : '02',\n        'Mar' : '03',\n        'Apr' : '04',\n        'May' : '05',\n        'Jun' : '06',\n        'Jul' : '07',\n        'Aug' : '08',\n        'Sep' : '09',\n        'Oct' : '10',\n        'Nov' : '11',\n        'Dec' : '12'\n    }\n\n    \n\n\n    function addText_to_List(event) {\n        let now = Date(Date.now()).split(' ')\n        let compare = now[3]+\"-\"+months[now[1]]+\"-\"+ now[2]\n        console.log(list[list.length]['lp'])\n        if(text !== \"\" && date !== \"\" && Date.parse(compare) < Date.parse(date)){\n            setList([...list, {lp: 1 ,text, date}]);\n            setDate(\"\");\n            setText(\"\");\n            setDone([])\n            setWarning_Date(\"\");\n            setWarning_Text(\"\");\n        }\n        else if(Date.parse(compare) >= Date.parse(date)){\n            setWarning_Date(\"UWAGA! Podano zla date\");\n        }\n        else if(text === \"\" && date !== \"\"){\n            setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n        }\n        else if(date === \"\" && text !== \"\"){\n            setWarning_Date(\"UWAGA! Nie zawarto daty\");\n        }\n        else{\n            setWarning_Date(\"UWAGA! Nie zawarto daty\");\n            setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n        }\n    }\n\n    function addDone(event){\n        setDone([...done, {text: event.text, date: event.date}])\n    }\n\n\n    return(\n        <div>\n            <form>\n                <input \n                    type = \"text\"\n                    value = {text}\n                    onChange ={(event) => {setText(event.target.value)}}\n                />{warning_text}<br/>\n                <input\n                    type =\"date\"\n                    value = {date}\n                    onChange= {(event) => {setDate(event.target.value)}}\n                />{warning_date}<br/>\n                <input \n                    type = \"button\" \n                    onClick = {addText_to_List}\n                    value =\"Zatwierdz\"/>\n            </form>\n            Lista to-do:\n            <ToDo list = {list} addDone = {addDone} />\n            Lista ukonczonych zadan:\n            <ToDo list = {done} addDone = {addDone} />\n        </div>\n    )\n}\n\n\n\n\nexport default Formularz;"]},"metadata":{},"sourceType":"module"}