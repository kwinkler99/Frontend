{"ast":null,"code":"var _jsxFileName = \"/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js\";\nimport React, { useState } from \"react\";\nimport ToDo from './to-do.js';\n\nconst Formularz = () => {\n  const [text, setText] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [warning_date, setWarning_Date] = useState(\"\");\n  const [warning_text, setWarning_Text] = useState(\"\");\n  const months = {\n    'Jan': '01',\n    'Feb': '02',\n    'Mar': '03',\n    'Apr': '04',\n    'May': '05',\n    'Jun': '06',\n    'Jul': '07',\n    'Aug': '08',\n    'Sep': '09',\n    'Oct': '10',\n    'Nov': '11',\n    'Dec': '12'\n  };\n\n  function addText_to_List(event) {\n    let now = new Date();\n    let now_temp = now.toLocaleDateString(\"en-US\").split(\"/\");\n    let now_format = now_temp[1] + \"/\" + now_temp[0] + \"/\" + now_temp[2];\n    let date_temp = date.split(\"-\");\n    let date_format = date_temp[2] + \"/\" + date_temp[1] + \"/\" + date_temp[0];\n    console.log(text);\n    console.log(date);\n    console.log(Date.parse(now_format) < Date.parse(date_format));\n\n    if (text !== \"\" && date !== \"\" && Date.parse(now_format) < Date.parse(date_format)) {\n      setList([...list, {\n        lp: list.length !== 0 ? list[list.length - 1]['lp'] + 1 : 1,\n        text,\n        date: date_format,\n        active: \"deactivated\"\n      }]);\n      setDate(\"\");\n      setText(\"\");\n      setWarning_Date(\"\");\n      setWarning_Text(\"\");\n    } else if (Date.parse(now_format) >= Date.parse(date_format)) {\n      setWarning_Date(\"UWAGA! Podano zla date\");\n    } else if (text === \"\" && date !== \"\") {\n      setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n    } else if (date === \"\" && text !== \"\") {\n      setWarning_Date(\"UWAGA! Nie zawarto daty\");\n    } else {\n      setWarning_Date(\"UWAGA! Nie zawarto daty\");\n      setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n    }\n  }\n\n  function addDone(event) {\n    event.active = \"activated\";\n  }\n\n  function deleteEvent(event) {\n    let update = list.filter(a => a !== event);\n    setList(update);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), warning_text, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    value: date,\n    onChange: event => {\n      setDate(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), warning_date, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"button\",\n    onClick: addText_to_List,\n    value: \"Zatwierdz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  })), \"Lista to-do:\", /*#__PURE__*/React.createElement(ToDo, {\n    list: list,\n    deleteEvent: deleteEvent,\n    addDone: addDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default Formularz;","map":{"version":3,"sources":["/home/kasia/INF/winkler-katarzyna/lab01/src/Formularz.js"],"names":["React","useState","ToDo","Formularz","text","setText","list","setList","date","setDate","warning_date","setWarning_Date","warning_text","setWarning_Text","months","addText_to_List","event","now","Date","now_temp","toLocaleDateString","split","now_format","date_temp","date_format","console","log","parse","lp","length","active","addDone","deleteEvent","update","filter","a","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport ToDo from './to-do.js'\n\n\nconst Formularz = () => {\n    const [text, setText] = useState(\"\");\n    const [list, setList] = useState([]);\n    const [date, setDate] = useState(\"\");\n    const [warning_date, setWarning_Date] = useState(\"\");\n    const [warning_text, setWarning_Text] = useState(\"\");\n    const months = {\n        'Jan' : '01',\n        'Feb' : '02',\n        'Mar' : '03',\n        'Apr' : '04',\n        'May' : '05',\n        'Jun' : '06',\n        'Jul' : '07',\n        'Aug' : '08',\n        'Sep' : '09',\n        'Oct' : '10',\n        'Nov' : '11',\n        'Dec' : '12'\n    }\n\n    \n\n\n    function addText_to_List(event) {\n        let now = new Date()\n        let now_temp = now.toLocaleDateString(\"en-US\").split(\"/\")\n        let now_format = now_temp[1]+\"/\"+now_temp[0]+\"/\"+now_temp[2]\n        let date_temp = date.split(\"-\")\n        let date_format = date_temp[2]+\"/\"+date_temp[1]+\"/\"+date_temp[0]\n\n        console.log(text)\n        console.log(date)\n        console.log(Date.parse(now_format) < Date.parse(date_format))\n\n\n        if(text !== \"\" && date !== \"\" && Date.parse(now_format) < Date.parse(date_format)){\n            setList([...list, {lp: list.length !== 0 ? list[list.length-1]['lp'] + 1 : 1 ,text, date: date_format, active: \"deactivated\"}]);\n            setDate(\"\");\n            setText(\"\");\n            setWarning_Date(\"\");\n            setWarning_Text(\"\");\n        }\n        else if(Date.parse(now_format) >= Date.parse(date_format)){\n            setWarning_Date(\"UWAGA! Podano zla date\");\n        }\n        else if(text === \"\" && date !== \"\"){\n            setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n        }\n        else if(date === \"\" && text !== \"\"){\n            setWarning_Date(\"UWAGA! Nie zawarto daty\");\n        }\n        else{\n            setWarning_Date(\"UWAGA! Nie zawarto daty\");\n            setWarning_Text(\"UWAGA! Nie zawarto tekstu\");\n        }\n    }\n\n    function addDone(event){\n        event.active = \"activated\"\n    }\n\n    function deleteEvent(event){\n        let update = list.filter(a => a !== event)\n        setList(update)\n    }\n\n\n    return(\n        <div>\n            <form>\n                <input \n                    type = \"text\"\n                    value = {text}\n                    onChange ={(event) => {setText(event.target.value)}}\n                />{warning_text}<br/>\n                <input\n                    type =\"date\"\n                    value = {date}\n                    onChange= {(event) => {setDate(event.target.value)}}\n                />{warning_date}<br/>\n                <input \n                    type = \"button\" \n                    onClick = {addText_to_List}\n                    value =\"Zatwierdz\"/>\n            </form>\n            Lista to-do:\n            <ToDo list = {list} deleteEvent = {deleteEvent} addDone = {addDone} />\n        </div>\n    )\n}\n\n\n\n\nexport default Formularz;"]},"metadata":{},"sourceType":"module"}