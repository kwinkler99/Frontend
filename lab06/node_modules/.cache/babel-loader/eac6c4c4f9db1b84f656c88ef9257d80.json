{"ast":null,"code":"var _jsxFileName = \"/home/kasia/inf/winkler-katarzyna/lab02/zad02/src/to-do.js\";\nimport React, { Component } from \"react\";\nimport './ToDo.css';\nimport FlipMove from 'react-flip-move';\nimport SetHour from './SetHour';\n\nclass ToDo extends Component {\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.props.setTimer(new Date());\n  }\n\n  check() {\n    let time = this.props.timer.toLocaleDateString();\n    let new_time = time.split(\".\");\n    this.props.list.map(item => {\n      let new_date = item.date.split(\".\");\n\n      if (new_date[2] < new_time[2]) {\n        item.active = \"Expired\";\n        this.props.handleChange();\n        return item;\n      } else if (new_date[2] === new_time[2]) {\n        if (new_date[1] < new_time[1]) {\n          item.active = \"Expired\";\n          this.props.handleChange();\n          return item;\n        } else if (new_date[1] === new_time[1]) {\n          if (new_date[0] < new_time[0]) {\n            item.active = \"Expired\";\n            this.props.handleChange();\n            return item;\n          } else if (new_date[0] === new_time[0]) {\n            if (item.hour + \":00\" <= this.props.timer.toLocaleTimeString()) {\n              item.active = \"Expired\";\n              this.props.handleChange();\n              return item;\n            }\n\n            return item;\n          }\n\n          return item;\n        }\n\n        return item;\n      }\n\n      return item;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listToDo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease-out\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, this.props.list.map(choose => {\n      this.check();\n\n      if (choose.active === \"Todo\") {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"items\",\n          key: choose.lp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          key: choose.lp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 37\n          }\n        }, \"Lp \", choose.lp, \". Tekst: \", choose.text, \", Data: \", choose.date, \" , Godzina: \", choose.hour, \"Status: \", choose.active), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"button\",\n          onClick: () => this.props.deleteEvent(choose),\n          value: \"Przycisk usu\\u0144\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 37\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"button\",\n          onClick: () => {\n            choose.active = \"Done\";\n            this.props.addDone();\n          },\n          value: \"Przycisk zako\\u0144cz zadanie\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }\n        }));\n      } else if (choose.active === \"Done\") {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"items_done\",\n          key: choose.lp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 33\n          }\n        }, \"Lp \", choose.lp, \". Tekst: \", choose.text, \", Data: \", choose.date, \", Godzina: \", choose.hour, \"Status: \", choose.active);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"items_expired\",\n          key: choose.lp,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }\n        }, \"Lp \", choose.lp, \". Tekst: \", choose.text, \", Data: \", choose.date, \", Godzina: \", choose.hour, \"Status: \", choose.active);\n      }\n    })), /*#__PURE__*/React.createElement(SetHour, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nexport default ToDo;","map":{"version":3,"sources":["/home/kasia/inf/winkler-katarzyna/lab02/zad02/src/to-do.js"],"names":["React","Component","FlipMove","SetHour","ToDo","componentDidMount","timerID","setInterval","tick","componentWillUnmount","clearInterval","props","setTimer","Date","check","time","timer","toLocaleDateString","new_time","split","list","map","item","new_date","date","active","handleChange","hour","toLocaleTimeString","render","choose","lp","text","deleteEvent","addDone"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport './ToDo.css'\nimport FlipMove from 'react-flip-move';\nimport SetHour from './SetHour' \n\n\n\n\nclass ToDo extends Component {\n\n    componentDidMount() {\n        this.timerID = setInterval(\n          () => this.tick(),\n          1000\n        );\n    }\n\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n\n    tick() {\n        this.props.setTimer(new Date())\n    }\n\n\n    check(){\n        let time = this.props.timer.toLocaleDateString()\n        let new_time = time.split(\".\")\n        this.props.list.map((item) => {\n            let new_date = item.date.split(\".\")\n            if(new_date[2]<new_time[2]){          \n                item.active = \"Expired\"\n                this.props.handleChange()\n                return item\n            }\n            else if(new_date[2] === new_time[2]){\n                if(new_date[1]<new_time[1]){\n                    item.active = \"Expired\"\n                    this.props.handleChange()\n                    return item\n                }\n                else if(new_date[1] === new_time[1]){\n                    if(new_date[0]<new_time[0]){\n                        item.active = \"Expired\"\n                        this.props.handleChange()\n                        return item\n                    }\n                    else if(new_date[0] === new_time[0]){\n                        if(item.hour+\":00\" <= this.props.timer.toLocaleTimeString()){\n                            item.active = \"Expired\"\n                            this.props.handleChange()\n                            return item\n                        }\n                        return item\n                    }\n                    return item\n                }\n                return item\n            }\n            return item\n        })\n    }\n\n    \n\n    render(){\n        return(\n            <div className = \"listToDo\">\n                <FlipMove duration={250} easing=\"ease-out\">\n                    {this.props.list\n                    .map(choose =>\n                        {this.check()\n                            if (choose.active === \"Todo\"){  \n                            return(\n                                <div className=\"items\" key = {choose.lp}>\n                                    <div  key = {choose.lp}>\n                                        Lp {choose.lp}. \n                                        Tekst: {choose.text}, \n                                        Data: {choose.date} , \n                                        Godzina: {choose.hour}  \n                                        Status: {choose.active}</div>\n                                    <input \n                                        type = \"button\" \n                                        onClick = {() => this.props.deleteEvent(choose)}\n                                        value =\"Przycisk usuń\"/>\n                                    <input\n                                        type = \"button\" \n                                        onClick = {() => {choose.active = \"Done\"; this.props.addDone()}}\n                                        value =\"Przycisk zakończ zadanie\"/>\n                                </div>\n                            )}\n                        else if(choose.active === \"Done\"){\n                            return (\n                                <div className=\"items_done\" key = {choose.lp}>\n                                    Lp {choose.lp}. \n                                    Tekst: {choose.text}, \n                                    Data: {choose.date}, \n                                    Godzina: {choose.hour}\n                                    Status: {choose.active}</div>)\n                        }\n                        else{\n                            return (\n                                <div className=\"items_expired\" key = {choose.lp}>\n                                    Lp {choose.lp}. \n                                    Tekst: {choose.text}, \n                                    Data: {choose.date}, \n                                    Godzina: {choose.hour}\n                                    Status: {choose.active}</div>)\n                        }\n                    })}\n                    \n                </FlipMove>\n                <SetHour {...this.props}/>\n            </div>\n        )\n    }\n}\n\nexport default ToDo;"]},"metadata":{},"sourceType":"module"}